{"version":3,"file":"static/js/858.498ac060.chunk.js","mappings":"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","sources":["components/RegisterLoginForm/RegisterForm.jsx","pages/RegisterPage/RegisterPage.styled.jsx","pages/RegisterPage/RegisterPage.jsx"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { useState } from 'react';\nimport * as SC from './RegisterLoginForm.styled';\nimport { register } from 'redux/auth/operations';\nimport { Visibility, VisibilityOff } from '@mui/icons-material';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport { SVG } from 'images';\nimport { Loader } from 'components/Loader/Loader';\nimport useAuth from 'hooks/useAuth';\nimport { toast } from 'react-hot-toast';\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: '#8D9698',\n    },\n  },\n});\n\nconst SignupSchema = Yup.object().shape({\n  name: Yup.string()\n    .min(3, 'Too Short!')\n    .max(20, 'Too Long!')\n    .required('Please enter your name'),\n  email: Yup.string()\n    .email('This is an ERROR email')\n    .required('Please enter your email')\n    .matches(/^[a-z0-9.]+@[a-z]+\\.[a-z]{2,3}$/),\n  password: Yup.string()\n    .min(8, 'Need to be more than 8 symbols!')\n    .required('Please enter your password')\n    .matches(/^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{8,30}$/),\n});\n\nconst RegisterForm = () => {\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const [usedEmail, setUsedEmail] = useState(false);\n  const [visibility, setVisibility] = useState(false);\n  const { isLoading, isLoggedIn, error } = useAuth();\n  const [isSubmitted, setIsSubmitted] = useState(false);\n\n  const handleSubmit = (values, { resetForm }) => {\n    setIsSubmitted(true);\n    dispatch(\n      register({\n        name: values.name,\n        email: values.email,\n        password: values.password,\n      })\n    );\n    if (isLoggedIn) {\n      resetForm();\n      navigate('/calendar');\n    }\n  };\n\n  useEffect(() => {\n    if (error.status&&isSubmitted) {\n      if (error.status === 409) {\n        setUsedEmail(true);\n      } else {\n        toast(error.message)\n      }\n    }\n  }, [error.message, error.status, isSubmitted]);\n\n  return (\n    <SC.StyledContainer>\n      <SC.StyledHeader>Sign Up</SC.StyledHeader>\n      <Formik\n        initialValues={{\n          name: '',\n          email: '',\n          password: '',\n        }}\n        validateOnChange={false}\n        validateOnBlur={true}\n        validationSchema={SignupSchema}\n        onSubmit={handleSubmit}\n      >\n        {({ errors, touched }) => {\n          return (\n            <>\n              {isLoading && <Loader />}\n              <SC.StyledForm>\n                <SC.StyledFormDiv>\n                  <SC.Styledlabel\n                    htmlFor=\"name\"\n                    $validate={\n                      (errors.name === 'Please enter your name' &&\n                        touched.name &&\n                        'empty') ||\n                      (errors.name && touched.name && 'error') ||\n                      (touched.name && 'okay')\n                    }\n                  >\n                    Name\n                  </SC.Styledlabel>\n                  <SC.StyledFieldContainer\n                    $validate={\n                      (errors.name === 'Please enter your name' &&\n                        touched.name &&\n                        'empty') ||\n                      (errors.name && touched.name && 'error') ||\n                      (touched.name && 'okay')\n                    }\n                  >\n                    <SC.StyledField name=\"name\" placeholder=\"Enter your name\" />\n                    {errors.name &&\n                      errors.name !== 'Please enter your name' &&\n                      touched.name && (\n                        <SC.StyledIcon>\n                          <SVG.ErrorAuth />\n                        </SC.StyledIcon>\n                      )}\n                    {touched.name && !errors.name && (\n                      <SC.StyledIcon>\n                        <SVG.GoodAuth />\n                      </SC.StyledIcon>\n                    )}\n                  </SC.StyledFieldContainer>\n\n                  {(errors.name === 'Please enter your name' &&\n                    touched.name && (\n                      <SC.StyledRequired>{errors.name}</SC.StyledRequired>\n                    )) ||\n                    (errors.name && touched.name && (\n                      <SC.StyledError>{errors.name}</SC.StyledError>\n                    )) ||\n                    (touched.name && (\n                      <SC.StyledCorrect>\n                        This is an CORRECT name\n                      </SC.StyledCorrect>\n                    ))}\n                </SC.StyledFormDiv>\n                <SC.StyledFormDiv>\n                  <SC.Styledlabel\n                    htmlFor=\"email\"\n                    $validate={\n                      (errors.email === 'Please enter your email' &&\n                        touched.email &&\n                        'empty') ||\n                      (((errors.email &&\n                        (errors.email === 'This is an ERROR email' ||\n                          errors.email.includes('match'))) ||\n                        usedEmail) &&\n                        'error') ||\n                      (touched.email && 'okay')\n                    }\n                  >\n                    Email\n                  </SC.Styledlabel>\n                  <SC.StyledFieldContainer\n                    $validate={\n                      (errors.email === 'Please enter your email' &&\n                        touched.email &&\n                        'empty') ||\n                      (((errors.email &&\n                        (errors.email === 'This is an ERROR email' ||\n                          errors.email.includes('match'))) ||\n                        usedEmail) &&\n                        'error') ||\n                      (touched.email && 'okay')\n                    }\n                  >\n                    <SC.StyledField\n                      name=\"email\"\n                      type=\"email\"\n                      placeholder=\"Enter email\"\n                    />\n                    {((errors.email &&\n                      (errors.email === 'This is an ERROR email' ||\n                        errors.email.includes('match'))) ||\n                      usedEmail) && (\n                      <SC.StyledIcon>\n                        <SVG.ErrorAuth />\n                      </SC.StyledIcon>\n                    )}\n                    {touched.email && !errors.email && !usedEmail && (\n                      <SC.StyledIcon>\n                        <SVG.GoodAuth />\n                      </SC.StyledIcon>\n                    )}\n                  </SC.StyledFieldContainer>\n                  {(errors.email === 'Please enter your email' &&\n                    touched.email && (\n                      <SC.StyledRequired>{errors.email}</SC.StyledRequired>\n                    )) ||\n                    (errors.email &&\n                      (errors.email === 'This is an ERROR email' ||\n                        errors.email.includes('match')) && (\n                        <SC.StyledError>This is an ERROR email</SC.StyledError>\n                      )) ||\n                    (usedEmail && (\n                      <SC.StyledError>\n                        This user is already exist\n                      </SC.StyledError>\n                    )) ||\n                    (touched.email && (\n                      <SC.StyledCorrect>\n                        This is an CORRECT email\n                      </SC.StyledCorrect>\n                    ))}\n                </SC.StyledFormDiv>\n                <SC.StyledFormDiv>\n                  <SC.Styledlabel\n                    htmlFor=\"password\"\n                    $validate={\n                      (errors.password === 'Please enter your password' &&\n                        touched.password &&\n                        'empty') ||\n                      (errors.password && touched.password && 'error') ||\n                      (touched.password && 'okay')\n                    }\n                  >\n                    Password\n                  </SC.Styledlabel>\n                  <SC.StyledFieldContainer\n                    $validate={\n                      (errors.password === 'Please enter your password' &&\n                        touched.password &&\n                        'empty') ||\n                      (errors.password && touched.password && 'error') ||\n                      (touched.password && 'okay')\n                    }\n                  >\n                    <SC.StyledField\n                      name=\"password\"\n                      type={!visibility ? 'password' : 'text'}\n                      placeholder=\"Enter password\"\n                    />\n                    <SC.StyledButtonVisibility\n                      type=\"button\"\n                      onClick={() => {\n                        setVisibility(!visibility);\n                      }}\n                    >\n                      <ThemeProvider theme={theme}>\n                        {!visibility ? (\n                          <Visibility color=\"primary\" />\n                        ) : (\n                          <VisibilityOff color=\"primary\" />\n                        )}\n                      </ThemeProvider>\n                    </SC.StyledButtonVisibility>\n                  </SC.StyledFieldContainer>\n                  {(errors.password === 'Please enter your password' &&\n                    touched.password && (\n                      <SC.StyledRequired>{errors.password}</SC.StyledRequired>\n                    )) ||\n                    (errors.password &&\n                      errors.password.includes(\n                        'password must match the following'\n                      ) &&\n                      touched.password && (\n                        <SC.StyledErrorPassword>\n                          Password should contain at least 1 number and 1 letter\n                        </SC.StyledErrorPassword>\n                      )) ||\n                    (errors.password && touched.password && (\n                      <SC.StyledError>{errors.password}</SC.StyledError>\n                    )) ||\n                    (touched.password && (\n                      <SC.StyledCorrect>\n                        This is an CORRECT password\n                      </SC.StyledCorrect>\n                    ))}\n                </SC.StyledFormDiv>\n                <SC.StyledButton type=\"submit\">\n                  Sign Up\n                  <SVG.LoginWhiteIcon />\n                </SC.StyledButton>\n              </SC.StyledForm>\n            </>\n          );\n        }}\n      </Formik>\n    </SC.StyledContainer>\n  );\n};\n\nexport default RegisterForm;\n","import styled from 'styled-components';\n\nexport const StyledLayout = styled.div`\n  margin: 0 auto;\n  width: 100%;\n  height: 100vh;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  background: var(--LogReg-Bckg-Color);\n  position: relative;\n`;\n\nexport const StyledSharedContainer = styled.div`\n  position: absolute;\n  top: 50%;              \n  left: 50%;         \n  width: 100%;\n  padding: 0 15px;       \n  transform: translate(-50%, -50%);\n  margin: 0 auto;\n`\nexport const StyledPicture = styled.picture`\n  position: absolute;\n  bottom: 0;\n  left: 49px;\n`\nexport const StyledImg = styled.img`\n  display:none;\n  @media (min-width: 1440px) {\n    display:block;\n  }\n`","import { IMG } from 'images';\nimport { AuthNavigate } from 'components/AuthNavigate/AuthNavigate';\nimport RegisterForm from 'components/RegisterLoginForm/RegisterForm';\nimport * as SC from './RegisterPage.styled';\n\nconst RegisterPage = () => {\n  return (\n    <SC.StyledLayout>\n      <SC.StyledSharedContainer>\n        <RegisterForm />\n        <AuthNavigate path=\"/login\" text=\"Log In\" />\n      </SC.StyledSharedContainer>\n      <SC.StyledPicture>\n        <source\n          srcSet={`${IMG.registerx1} 1x, ${IMG.registerx2} 2x`}\n          type=\"image/jpg\"\n          media=\"(min-width: 1440px)\"\n        />\n        <SC.StyledImg\n          srcSet={`${IMG.registerx1} 1x, ${IMG.registerx2} 2x`}\n          alt=\"Quickly register and familiarize yourseld with the application!\"\n        />\n      </SC.StyledPicture>\n    </SC.StyledLayout>\n  );\n};\n\nexport default RegisterPage;\n"],"names":["theme","createTheme","palette","primary","main","SignupSchema","Yup","shape","name","min","max","required","email","matches","password","navigate","useNavigate","dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","usedEmail","setUsedEmail","_useState3","_useState4","visibility","setVisibility","_useAuth","useAuth","isLoading","isLoggedIn","error","_useState5","_useState6","isSubmitted","setIsSubmitted","useEffect","status","toast","message","_jsxs","SC","children","_jsx","Formik","initialValues","validateOnChange","validateOnBlur","validationSchema","onSubmit","values","_ref","resetForm","register","_ref2","errors","touched","_Fragment","Loader","htmlFor","$validate","placeholder","SVG","includes","type","onClick","ThemeProvider","VisibilityOff","color","Visibility","StyledLayout","styled","_templateObject","_taggedTemplateLiteral","StyledSharedContainer","_templateObject2","StyledPicture","_templateObject3","StyledImg","_templateObject4","RegisterForm","AuthNavigate","path","text","srcSet","concat","IMG","media","alt"],"sourceRoot":""}