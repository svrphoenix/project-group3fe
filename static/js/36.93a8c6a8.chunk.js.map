{"version":3,"file":"static/js/36.93a8c6a8.chunk.js","mappings":"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","sources":["components/Calendar/PeriodPaginator/PeriodPaginator.styled.js","components/Calendar/PeriodPaginator/PeriodPaginator.jsx","components/Calendar/PeriodTypeSelect/PeriodTypeSelect.styled.js","components/Calendar/PeriodTypeSelect/PeriodTypeSelect.jsx","components/Calendar/MonthCalendarHead/MonthCalendarHead.styled.js","components/Calendar/MonthCalendarHead/MonthCalendarHead.jsx","components/Calendar/DayCalendarHead/DayCalendarHead.styled.js","components/Calendar/DayCalendarHead/DayCalendarHead.jsx","components/Calendar/CalendarToolbar/CalendarToolbar.styled.js","components/Calendar/CalendarToolbar/CalendarToolbar.jsx","../node_modules/date-fns/esm/eachDayOfInterval/index.js","pages/CalendarPage/CalendarPage.jsx"],"sourcesContent":["const { css, styled } = require('styled-components');\n\nconst sharedStyle = css`\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  position: relative;\n  outline: 0px;\n  border: 0px;\n  cursor: pointer;\n  user-select: none;\n  vertical-align: middle;\n  appearance: none;\n  text-decoration: none;\n  min-width: 38px;\n  padding: 8px 12px;\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  background-color: #fff;\n  ${\n    '' /* &.active {\n    background-color: #cae8ff;\n  } */\n  }\n  &:hover,\n  &:focus {\n    background-color: #f8f8f8;\n  }\n`;\n\nexport const PeriodPaginatorWrapper = styled.div`\n  display: inline-flex;\n  align-items: center;\n  vertical-align: middle;\n  justify-content: space-between;\n  margin-bottom: 18px;\n  @media screen and (min-width: 768px) {\n    justify-content: initial;\n    margin-bottom: initial;\n  }\n`;\n\nexport const PeriodPaginatorDisplay = styled.div`\n  color: #fff;\n  text-align: center;\n  font-family: 'Inter Bold';\n  font-size: 16px;\n  line-height: 1.13;\n  text-transform: uppercase;\n  border-radius: 8px;\n  background-color: #3e85f3;\n  padding: 8px 12px;\n  margin-right: 8px;\n`;\n\nexport const ButtonGroup = styled.div`\n  display: inline-flex;\n  border: 1px solid rgba(220, 227, 229, 0.8);\n  border-radius: 8px;\n`;\n\nexport const Button = styled.button`\n  color: #343434;\n  &:first-child {\n    border-top-left-radius: 8px;\n    border-bottom-left-radius: 8px;\n    border-right: 1px solid rgba(220, 227, 229, 0.5);\n  }\n  &:last-child {\n    border-top-right-radius: 8px;\n    border-bottom-right-radius: 8px;\n  }\n  ${sharedStyle};\n`;\n","import { SVG } from 'images';\nimport * as SC from './PeriodPaginator.styled';\nimport PropTypes from 'prop-types';\n\nexport const PeriodPaginator = ({ date, prevHandler, nextHandler }) => {\n  return (\n    <SC.PeriodPaginatorWrapper>\n      <SC.PeriodPaginatorDisplay>{date}</SC.PeriodPaginatorDisplay>\n      <SC.ButtonGroup>\n        <SC.Button onClick={prevHandler}>\n          <SVG.LeftChevron />\n        </SC.Button>\n        <SC.Button onClick={nextHandler}>\n          <SVG.RightChevron />\n        </SC.Button>\n      </SC.ButtonGroup>\n    </SC.PeriodPaginatorWrapper>\n  );\n};\n\nPeriodPaginator.propTypes = {\n  date: PropTypes.string.isRequired,\n  prevHandler: PropTypes.func.isRequired,\n  nextHandler: PropTypes.func.isRequired,\n};\n","import { css, styled } from 'styled-components';\n\nconst sharedStyle = css`\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  position: relative;\n  outline: 0px;\n  border: 0px;\n  cursor: pointer;\n  user-select: none;\n  vertical-align: middle;\n  appearance: none;\n  text-decoration: none;\n  font-family: 'Inter Medium';\n  font-size: 16px;\n  line-height: 1.13;\n  min-width: 82px;\n  padding: 8px 16px;\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  color: inherit;\n  background-color: #e3f3ff;\n  &.active {\n    background-color: #cae8ff;\n  }\n  &:hover,\n  &:focus {\n    background-color: #cae8ff;\n  }\n`;\n\nexport const ButtonGroup = styled.div`\n  display: inline-flex;\n  color: #3e85f3;\n  border-radius: 8px;\n`;\n\nexport const Button = styled.button`\n  &:first-child {\n    border-top-left-radius: 8px;\n    border-bottom-left-radius: 8px;\n    border-right: 1px solid rgba(62, 133, 243, 0.2);\n  }\n  &:last-child {\n    border-top-right-radius: 8px;\n    border-bottom-right-radius: 8px;\n  }\n  ${sharedStyle};\n`;\n","import { Button, ButtonGroup } from './PeriodTypeSelect.styled';\nimport PropTypes from 'prop-types';\n\nexport const PeriodTypeSelect = ({ type }) => {\n  const BtnDayHandler = () => {\n    console.log('Click day button');\n  };\n  const BtnMonthHandler = () => {\n    console.log('Click month button');\n  };\n\n  return (\n    <ButtonGroup>\n      <Button\n        className={type === 'month' ? 'active' : null}\n        type=\"button\"\n        onClick={BtnMonthHandler}\n        disabled={type === 'month' ? 'disabled' : null}\n      >\n        Month\n      </Button>\n      <Button\n        className={type === 'day' ? 'active' : null}\n        type=\"button\"\n        onClick={BtnDayHandler}\n        disabled={type === 'day' ? 'disabled' : null}\n      >\n        Day\n      </Button>\n    </ButtonGroup>\n  );\n};\n\nPeriodTypeSelect.propTypes = {\n  type: PropTypes.string.isRequired,\n};\n","import { styled } from 'styled-components';\n\nexport const Day = styled.div`\n  padding: 16px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  &:nth-last-child(-n + 2) {\n    color: #3e85f3;\n  }\n`;\n","import { format } from 'date-fns';\nimport * as SC from './MonthCalendarHead.styled';\nimport PropTypes from 'prop-types';\n\nexport const MonthCalendarHead = ({ width, day }) => {\n  return (\n    <SC.Day>{width > 768 ? format(day, 'EEE') : format(day, 'EEEEE')}</SC.Day>\n  );\n};\n\nMonthCalendarHead.propTypes = {\n  width: PropTypes.number.isRequired,\n  day: PropTypes.instanceOf(Date).isRequired,\n};\n","import { styled } from 'styled-components';\n\nexport const Day = styled.div`\n  padding: 16px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  &:nth-last-child(-n + 2) {\n    color: #3e85f3;\n  }\n`;\nexport const DayNumber = styled.span`\n  color: #343434;\n  font-family: 'Inter Bold';\n  font-size: 12px;\n  line-height: 1.17;\n  margin-top: 6px;\n  &.current-date {\n    color: #fff;\n    border-radius: 8px;\n    background: #3e85f3;\n    padding: 4px 8px;\n  }\n  @media screen and (min-width: 768px) {\n    font-size: 16px;\n    line-height: 1.13;\n    margin-top: 4px;\n  }\n`;\n","import { format } from 'date-fns';\nimport * as SC from './DayCalendarHead.styled';\nimport PropTypes from 'prop-types';\n\nexport const DayCalendarHead = ({ width, day, isActive }) => {\n  return (\n    <SC.Day key={day}>\n      {width > 768 ? format(day, 'EEE') : format(day, 'EEEEE')}\n      <SC.DayNumber className={isActive ? 'current-date' : null}>\n        {format(day, 'd')}\n      </SC.DayNumber>\n    </SC.Day>\n  );\n};\n\nDayCalendarHead.propTypes = {\n  width: PropTypes.number.isRequired,\n  day: PropTypes.instanceOf(Date).isRequired,\n  isActive: PropTypes.bool.isRequired,\n};\n","import { styled } from 'styled-components';\n\nexport const CalendarToolbarWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  flex-direction: column;\n  margin-bottom: 24px;\n  @media screen and (min-width: 768px) {\n    flex-direction: inherit;\n    margin-bottom: 32px;\n  }\n`;\n\nexport const DaysOfWeekWrapper = styled.div`\n  display: flex;\n  justify-content: space-around;\n  border-radius: 8px;\n  border: 1px solid rgba(220, 227, 229, 0.5);\n`;\n","import { useEffect, useState } from 'react';\nimport { PeriodPaginator } from '../PeriodPaginator/PeriodPaginator';\nimport { PeriodTypeSelect } from '../PeriodTypeSelect/PeriodTypeSelect';\nimport { MonthCalendarHead } from '../MonthCalendarHead/MonthCalendarHead';\nimport { DayCalendarHead } from '../DayCalendarHead/DayCalendarHead';\nimport * as SC from './CalendarToolbar.styled';\nimport {\n  startOfWeek,\n  endOfWeek,\n  eachDayOfInterval,\n  format,\n  isSameDay,\n  addDays,\n} from 'date-fns';\nimport PropTypes from 'prop-types';\n\nexport const CalendarToolbar = ({ type = 'day' }) => {\n  const [currentDate, setCurrentDate] = useState(new Date());\n  const [width, setWidth] = useState(window.innerWidth);\n\n  useEffect(() => {\n    const handleWindowResize = () => setWidth(window.innerWidth);\n    window.addEventListener('resize', handleWindowResize);\n\n    return () => window.removeEventListener('resize', handleWindowResize);\n  }, []);\n\n  const formatedDate =\n    type === 'month'\n      ? format(currentDate, 'MMMM')\n      : format(currentDate, 'd MMMM');\n\n  const startDayOfWeek = startOfWeek(currentDate, { weekStartsOn: 1 });\n  const endDayOfWeek = endOfWeek(currentDate, { weekStartsOn: 1 });\n  const daysOfWeek = eachDayOfInterval({\n    start: startDayOfWeek,\n    end: endDayOfWeek,\n  });\n  const prevHandler = () => {\n    type === 'month'\n      ? setCurrentDate(\n          prevDate => new Date(prevDate.getFullYear(), prevDate.getMonth() - 1)\n        )\n      : setCurrentDate(prevDate => addDays(prevDate, -1));\n  };\n  const nextHandler = () => {\n    type === 'month'\n      ? setCurrentDate(\n          prevDate => new Date(prevDate.getFullYear(), prevDate.getMonth() + 1)\n        )\n      : setCurrentDate(prevDate => addDays(prevDate, 1));\n  };\n\n  return (\n    <>\n      <SC.CalendarToolbarWrapper>\n        <PeriodPaginator\n          date={formatedDate}\n          prevHandler={prevHandler}\n          nextHandler={nextHandler}\n        />\n        <PeriodTypeSelect type={type} />\n      </SC.CalendarToolbarWrapper>\n      <SC.DaysOfWeekWrapper>\n        {daysOfWeek.map(day => {\n          const isActive = isSameDay(day, currentDate);\n\n          return type === 'month' ? (\n            <MonthCalendarHead key={day} day={day} width={width} />\n          ) : (\n            <DayCalendarHead\n              key={day}\n              day={day}\n              width={width}\n              isActive={isActive}\n            />\n          );\n        })}\n      </SC.DaysOfWeekWrapper>\n    </>\n  );\n};\n\nCalendarToolbar.propTypes = {\n  type: PropTypes.string,\n};\n","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name eachDayOfInterval\n * @category Interval Helpers\n * @summary Return the array of dates within the specified time interval.\n *\n * @description\n * Return the array of dates within the specified time interval.\n *\n * @param {Interval} interval - the interval. See [Interval]{@link https://date-fns.org/docs/Interval}\n * @param {Object} [options] - an object with options.\n * @param {Number} [options.step=1] - the step to increment by. The value should be more than 1.\n * @returns {Date[]} the array with starts of days from the day of the interval start to the day of the interval end\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.step` must be a number greater than 1\n * @throws {RangeError} The start of an interval cannot be after its end\n * @throws {RangeError} Date in interval cannot be `Invalid Date`\n *\n * @example\n * // Each day between 6 October 2014 and 10 October 2014:\n * const result = eachDayOfInterval({\n *   start: new Date(2014, 9, 6),\n *   end: new Date(2014, 9, 10)\n * })\n * //=> [\n * //   Mon Oct 06 2014 00:00:00,\n * //   Tue Oct 07 2014 00:00:00,\n * //   Wed Oct 08 2014 00:00:00,\n * //   Thu Oct 09 2014 00:00:00,\n * //   Fri Oct 10 2014 00:00:00\n * // ]\n */\nexport default function eachDayOfInterval(dirtyInterval, options) {\n  var _options$step;\n  requiredArgs(1, arguments);\n  var interval = dirtyInterval || {};\n  var startDate = toDate(interval.start);\n  var endDate = toDate(interval.end);\n  var endTime = endDate.getTime();\n\n  // Throw an exception if start date is after end date or if any date is `Invalid Date`\n  if (!(startDate.getTime() <= endTime)) {\n    throw new RangeError('Invalid interval');\n  }\n  var dates = [];\n  var currentDate = startDate;\n  currentDate.setHours(0, 0, 0, 0);\n  var step = Number((_options$step = options === null || options === void 0 ? void 0 : options.step) !== null && _options$step !== void 0 ? _options$step : 1);\n  if (step < 1 || isNaN(step)) throw new RangeError('`options.step` must be a number greater than 1');\n  while (currentDate.getTime() <= endTime) {\n    dates.push(toDate(currentDate));\n    currentDate.setDate(currentDate.getDate() + step);\n    currentDate.setHours(0, 0, 0, 0);\n  }\n  return dates;\n}","// import PropTypes from 'prop-types';\n\nimport { CalendarToolbar } from 'components/Calendar/CalendarToolbar/CalendarToolbar';\nimport { format } from 'date-fns';\nimport { useEffect } from 'react';\nimport { useNavigate } from 'react-router';\n\nconst CalendarPage = () => {\n  const navigate = useNavigate();\n  // const [today, setToday] = useState(new Date());\n  const formatedCurrentDay = format(new Date(), 'MMMM').toLowerCase();\n\n  useEffect(() => {\n    navigate(`month/${formatedCurrentDay}`);\n  }, [navigate, formatedCurrentDay]);\n\n  return (\n    <>\n      <CalendarToolbar />\n    </>\n  );\n};\n\n// CalendarPage.propTypes = {};\n\nexport default CalendarPage;\n"],"names":["_require","require","css","styled","sharedStyle","_templateObject","_taggedTemplateLiteral","PeriodPaginatorWrapper","div","_templateObject2","PeriodPaginatorDisplay","_templateObject3","ButtonGroup","_templateObject4","Button","button","_templateObject5","PeriodPaginator","_ref","date","prevHandler","nextHandler","_jsxs","SC","children","_jsx","onClick","SVG","PeriodTypeSelect","type","className","console","log","disabled","Day","MonthCalendarHead","width","day","format","DayNumber","DayCalendarHead","isActive","CalendarToolbarWrapper","DaysOfWeekWrapper","CalendarToolbar","_ref$type","_useState","useState","Date","_useState2","_slicedToArray","currentDate","setCurrentDate","_useState3","window","innerWidth","_useState4","setWidth","useEffect","handleWindowResize","addEventListener","removeEventListener","formatedDate","daysOfWeek","dirtyInterval","options","_options$step","requiredArgs","arguments","interval","startDate","toDate","start","endTime","end","getTime","RangeError","dates","setHours","step","Number","isNaN","push","setDate","getDate","eachDayOfInterval","startOfWeek","weekStartsOn","endOfWeek","_Fragment","prevDate","getFullYear","getMonth","addDays","map","isSameDay","navigate","useNavigate","formatedCurrentDay","toLowerCase","concat"],"sourceRoot":""}