{"version":3,"file":"static/js/82.aa06833a.chunk.js","mappings":"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","sources":["pages/MainLayout/MainLayout.styled.jsx","components/SideBar/SideBar.styled.jsx","components/SideBar/SideBarLogo.styled.jsx","components/SideBar/SideBarLogo.jsx","components/SideBar/UserNav.styled.jsx","components/SideBar/UserNav.jsx","components/SideBar/LogoutBtn.styled.jsx","components/SideBar/LogoutBtn.jsx","components/SideBar/SideBar.jsx","components/Header/Header.styled.jsx","components/Header/ThemeToggleBtn.styled.jsx","components/Header/ThemeToggleBtn.jsx","components/Header/UserInfo.styled.jsx","components/Header/UserInfo.jsx","redux/review/selectors.js","components/FeedbackForm/StarRating.js","components/FeedbackForm/FeedbackForm.styled.js","components/FeedbackForm/FeedbackForm.jsx","components/FeedbackButton/FeedbackButton.styled.js","components/FeedbackButton/FeedbackButton.jsx","components/Header/Header.jsx","pages/MainLayout/MainLayout.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const MainContainer = styled.div``;\n\nexport const ContentWrapper = styled.div`\n  width: 100%;\n  margin: 0 auto;\n  padding: 24px 20px 40px 20px;\n\n  @media screen and (min-width: 375px) {\n    width: 375px;\n  }\n\n  @media screen and (min-width: 768px) {\n    padding: 24px 32px 38px 32px;\n    width: 768px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    width: calc(100% - 289px);\n    margin: 0;\n    margin-left: auto;\n    padding: 40px 32px 32px 32px;\n  }\n`;\n\nexport const ContentInnerBox = styled.div`\n  width: 100%;\n\n  @media screen and (min-width: 1440px) {\n    width: 1087px;\n    margin: 0 auto;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const SideBarBox = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: 999;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  align-items: flex-start;\n  background-color: var(--third-Bckg-Color);\n  width: 225px;\n  min-height: 100%;\n  padding: 24px 20px;\n  transform: translateX(-225px);\n  transition: transform var(--cubic), background-color var(--theme-cubic);\n\n  &.is-sidebar-opened {\n    transform: translateX(0);\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 289px;\n    padding: 24px 32px;\n    transform: translateX(-289px);\n  }\n\n  @media screen and (min-width: 1440px) {\n    z-index: 0;\n    padding: 32px 24px 24px 24px;\n    transform: translateX(0);\n  }\n`;\n\nexport const TopWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 64px;\n\n  @media screen and (min-width: 768px) {\n    gap: 50px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    gap: 32px;\n  }\n`;\n\nexport const SideBarBackdrop = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: 998;\n  display: none;\n  width: 100%;\n  height: 100%;\n  pointer-events: none;\n  background-color: rgba(0, 0, 0, 0.3);\n\n  &.is-sidebar-backdrop-opened {\n    display: block;\n    pointer-events: auto;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const SideBarLogoWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 6px;\n\n  @media screen and (min-width: 1440px) {\n    gap: 10px;\n  }\n`;\n\nexport const LogoImg = styled.img`\n  width: 36px;\n  height: 35px;\n\n  @media screen and (min-width: 768px) {\n    width: 60px;\n    height: 58px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    width: 71px;\n    height: 68px;\n  }\n`;\n\nexport const LogoTxt = styled.p`\n  color: var(--sidebar-logo-title);\n  text-shadow: 0px 9.399999618530273px 57.6875px rgba(0, 0, 0, 0.04),\n    0px 47px 355px rgba(0, 0, 0, 0.07);\n  font-family: 'Inter Bold';\n  font-size: 16px;\n  font-style: normal;\n  font-weight: 700;\n  line-height: 22px;\n  transition: color var(--theme-cubic);\n\n  & > span {\n    font-style: italic;\n  }\n\n  @media screen and (min-width: 768px) {\n    line-height: 24px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    font-size: 24px;\n  }\n`;\n\nexport const CloseSideBarBtn = styled.button`\n  cursor: pointer;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: transparent;\n  border: none;\n  margin: 0;\n  padding: 0;\n  margin-left: auto;\n\n  @media screen and (min-width: 1440px) {\n    display: none;\n  }\n`;\n\nexport const Vector = styled.svg`\n  width: 24px;\n  height: 24px;\n  fill: var(--second-Text-Color);\n\n  @media screen and (min-width: 768px) {\n    width: 34px;\n    height: 34px;\n  }\n`;\n","import {\n  SideBarLogoWrapper,\n  LogoImg,\n  LogoTxt,\n  CloseSideBarBtn,\n  Vector,\n} from './SideBarLogo.styled';\nimport AddSvg from 'components/AddSvg/AddSvg';\nimport getSvg from '../../utils/getSvg';\nimport { IMG } from '../../images';\n\nconst {\n  gooseMobile1x,\n  gooseMobile2x,\n  gooseTablet1x,\n  gooseTablet2x,\n  gooseDesktop1x,\n  gooseDesktop2x,\n} = IMG;\nconst SVG = getSvg();\n\nconst SideBarLogo = ({ closeSideBar }) => {\n  return (\n    <SideBarLogoWrapper>\n      <picture>\n        <source\n          srcSet={`${gooseDesktop1x} 1x, ${gooseDesktop2x} 2x`}\n          media=\"(min-width: 1440px)\"\n          type=\"image/webp\"\n        />\n        <source\n          srcSet={`${gooseTablet1x} 1x, ${gooseTablet2x} 2x`}\n          media=\"(min-width: 768px)\"\n          type=\"image/webp\"\n        />\n        <source\n          srcSet={`${gooseMobile1x} 1x, ${gooseMobile2x} 2x`}\n          media=\"(max-width: 767px)\"\n          type=\"image/webp\"\n        />\n        <LogoImg src={`${gooseDesktop1x}`} alt=\"Logo\" width=\"71\" />\n      </picture>\n      <LogoTxt>\n        G<span>oo</span>seTrack\n      </LogoTxt>\n      <CloseSideBarBtn\n        type=\"button\"\n        aria-label=\"Close sidebar\"\n        onClick={closeSideBar}\n      >\n        <AddSvg component={Vector} sprite={SVG} spriteId=\"cross-icon\" />\n      </CloseSideBarBtn>\n    </SideBarLogoWrapper>\n  );\n};\n\nexport default SideBarLogo;\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const UserNavWrapper = styled.div``;\n\nexport const UserNavHeading = styled.p`\n  margin-bottom: 24px;\n  color: var(--fourth-Text-Color);\n  font-family: 'Inter SemiBold';\n  font-size: 12px;\n  font-style: normal;\n  font-weight: 600;\n  line-height: normal;\n  transition: color var(--theme-cubic);\n\n  @media screen and (min-width: 768px) {\n    margin-bottom: 32px;\n    font-size: 14px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    font-size: 14px;\n  }\n`;\n\nexport const UserNavList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 18px;\n\n  @media screen and (min-width: 768px) {\n    gap: 16px;\n  }\n`;\n\nexport const UserNavItem = styled.li`\n  width: 185px;\n  height: 40px;\n\n  @media screen and (min-width: 768px) {\n    width: 225px;\n    height: 56px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    width: 241px;\n  }\n`;\n\nexport const UserNavLink = styled(NavLink)`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  padding: 10px 12px;\n  border-radius: 8px;\n  color: var(--third-Text-Color);\n  transition: color var(--cubic);\n\n  @media screen and (min-width: 768px) {\n    gap: 10px;\n    padding: 16px 20px;\n  }\n\n  &:hover,\n  &:focus {\n    color: var(--user-nav-item-hover);\n  }\n\n  &.active {\n    color: var(--user-nav-item-hover);\n    background-color: var(--user-nav-item-bg-active);\n    transition: color var(--theme-cubic), background-color var(--theme-cubic);\n  }\n`;\n\nexport const Vector = styled.svg`\n  width: 20px;\n  height: 20px;\n  fill: currentColor;\n\n  @media screen and (min-width: 768px) {\n    width: 24px;\n    height: 24px;\n  }\n`;\n\nexport const UserNavTxt = styled.p`\n  font-family: 'Inter SemiBold';\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 600;\n  line-height: normal;\n\n  @media screen and (min-width: 768px) {\n    font-size: 16px;\n  }\n`;\n","import {\n  UserNavWrapper,\n  UserNavHeading,\n  UserNavList,\n  UserNavItem,\n  UserNavLink,\n  Vector,\n  UserNavTxt,\n} from './UserNav.styled';\nimport AddSvg from 'components/AddSvg/AddSvg';\nimport getSvg from '../../utils/getSvg';\n\nconst SVG = getSvg();\n\nconst UserNav = ({ closeSideBar }) => {\n  const navListConfig = [\n    { linkTo: 'account', iconId: 'user-icon', linkName: 'My account' },\n    { linkTo: 'calendar', iconId: 'calendar-icon', linkName: 'Calendar' },\n    { linkTo: 'statistics', iconId: 'chart-icon', linkName: 'Statistics' },\n  ];\n\n  return (\n    <UserNavWrapper>\n      <UserNavHeading>User Panel</UserNavHeading>\n      <UserNavList>\n        {navListConfig.map(({ linkTo, iconId, linkName }) => (\n          <UserNavItem key={`${linkTo}`}>\n            <UserNavLink to={`${linkTo}`} onClick={closeSideBar}>\n              <AddSvg component={Vector} sprite={SVG} spriteId={`${iconId}`} />\n              <UserNavTxt>{linkName}</UserNavTxt>\n            </UserNavLink>\n          </UserNavItem>\n        ))}\n      </UserNavList>\n    </UserNavWrapper>\n  );\n};\n\nexport default UserNav;\n","import styled from 'styled-components';\n\nconst accentHoverColor = '#2B78EF';\nconst whiteColor = '#FFFFFF';\n\nexport const Btn = styled.button`\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  gap: 6px;\n  min-width: 131px;\n  padding: 14px 28px;\n  border: none;\n  border-radius: 16px;\n  background-color: var(--first-Bckg-Btn-Color);\n  box-shadow: 4px 2px 16px 0px rgba(136, 165, 191, 0.48);\n  transition: background-color var(--cubic);\n\n  @media screen and (min-width: 768px) {\n    gap: 11px;\n    min-width: 141px;\n    padding: 16px 23px;\n  }\n\n  &:hover,\n  &:focus {\n    background-color: ${accentHoverColor};\n  }\n`;\n\nexport const Txt = styled.p`\n  color: var(--first-Btn-Text-Color);\n  font-family: 'Inter SemiBold';\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 600;\n  line-height: 18px;\n  letter-spacing: -0.28px;\n\n  @media screen and (min-width: 768px) {\n    font-size: 18px;\n    line-height: 24px;\n    letter-spacing: -0.36px;\n  }\n`;\n\nexport const Vector = styled.svg`\n  width: 18px;\n  height: 18px;\n  fill: ${whiteColor};\n\n  @media screen and (min-width: 768px) {\n    width: 20px;\n    height: 20px;\n  }\n`;\n","import { Btn, Txt, Vector } from './LogoutBtn.styled';\nimport { logout } from 'redux/auth/operations';\nimport { useDispatch } from 'react-redux';\nimport AddSvg from 'components/AddSvg/AddSvg';\nimport getSvg from '../../utils/getSvg';\nimport { useNavigate } from 'react-router-dom';\n\nconst SVG = getSvg();\n\nconst LogoutBtn = ({ closeSideBar }) => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  function handleClick() {\n    closeSideBar();\n    dispatch(logout());\n    navigate('/', { replace: true });\n  }\n\n  return (\n    <Btn type=\"button\" onClick={handleClick}>\n      <Txt>Log out </Txt>\n      <AddSvg component={Vector} sprite={SVG} spriteId=\"logout-icon\" />\n    </Btn>\n  );\n};\n\nexport default LogoutBtn;\n","import { SideBarBox, TopWrapper, SideBarBackdrop } from './SideBar.styled';\nimport SideBarLogo from './SideBarLogo';\nimport UserNav from './UserNav';\nimport LogoutBtn from './LogoutBtn';\n\nconst SideBar = ({ isSideBarOpened, closeSideBar }) => {\n  return (\n    <>\n      <SideBarBox className={`${isSideBarOpened ? 'is-sidebar-opened' : ''}`}>\n        <TopWrapper>\n          <SideBarLogo closeSideBar={closeSideBar} />\n          <UserNav closeSideBar={closeSideBar} />\n        </TopWrapper>\n        <LogoutBtn closeSideBar={closeSideBar} />\n      </SideBarBox>\n      <SideBarBackdrop\n        className={`${isSideBarOpened ? 'is-sidebar-backdrop-opened' : ''}`}\n        onClick={closeSideBar}\n      />\n    </>\n  );\n};\n\nexport default SideBar;\n","import styled from 'styled-components';\n\nexport const HeaderContainer = styled.div`\n  display: flex;\n  align-items: center;\n  margin-bottom: 64px;\n\n  @media screen and (min-width: 1440px) {\n    align-items: flex-start;\n    margin-bottom: 32px;\n  }\n`;\n\nexport const HeaderTitleWrapperNoGoose = styled.div`\n  display: none;\n\n  @media screen and (min-width: 1440px) {\n    display: block;\n  }\n`;\n\nexport const Title = styled.h1`\n  color: var(--first-Text-Color);\n  text-shadow: 0px 9.399999618530273px 57.6875px rgba(0, 0, 0, 0.04),\n    0px 47px 355px rgba(0, 0, 0, 0.07);\n  font-family: 'Inter Bold';\n  font-size: 32px;\n  font-style: normal;\n  font-weight: 700;\n  line-height: 32px;\n  transition: color var(--theme-cubic);\n`;\n\nexport const HeaderTitleWrapperGoose = styled.div`\n  display: none;\n\n  @media screen and (min-width: 1440px) {\n    display: flex;\n    align-items: center;\n    gap: 8px;\n  }\n`;\n\nexport const GooseMentorImg = styled.img`\n  width: 64px;\n  height: 60px;\n`;\n\nexport const TxtWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n`;\n\nexport const Motivator = styled.p`\n  color: var(--first-Text-Color);\n  font-family: 'Inter SemiBold';\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 600;\n  line-height: 18px;\n\n  & > span {\n    color: var(--first-Bckg-Btn-Color);\n  }\n`;\n\nexport const BurgerBtn = styled.button`\n  cursor: pointer;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin: 0;\n  padding: 0;\n  border: none;\n  background-color: transparent;\n\n  @media screen and (min-width: 1440px) {\n    display: none;\n  }\n`;\n\nexport const Vector = styled.svg`\n  width: 24px;\n  height: 24px;\n  fill: var(--second-Text-Color);\n\n  @media screen and (min-width: 768px) {\n    width: 34px;\n    height: 34px;\n  }\n`;\n\nexport const HeaderMenuWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 18px;\n  margin-left: auto;\n\n  @media screen and (min-width: 768px) {\n    gap: 24px;\n  }\n`;\n\nexport const UserInfoWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n\n  @media screen and (min-width: 768px) {\n    gap: 14px;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const Button = styled.button`\n  cursor: pointer;\n  border: none;\n  background-color: transparent;\n`;\n\nexport const Vector = styled.svg`\n  width: 24px;\n  height: 24px;\n  fill: var(--first-Icon-Color);\n\n  @media screen and (min-width: 768px) {\n    width: 32px;\n    height: 32px;\n  }\n`;\n","import { useEffect, useState } from 'react';\nimport { Button, Vector } from './ThemeToggleBtn.styled';\nimport AddSvg from 'components/AddSvg/AddSvg';\nimport getSvg from '../../utils/getSvg';\n\nconst SVG = getSvg();\n\nconst ThemeToggleBtn = () => {\n  const [theme, setTheme] = useState(localStorage.getItem('theme'));\n\n  useEffect(() => {\n    document.body.setAttribute('data-theme', theme);\n    localStorage.setItem('theme', theme);\n  }, [theme]);\n\n  const toogleTheme = () => {\n    setTheme(theme === 'light' ? 'dark' : 'light');\n  };\n\n  return (\n    <Button type=\"button\" aria-label=\"Switch color theme\" onClick={toogleTheme}>\n      {theme === 'light' ? (\n        <AddSvg component={Vector} sprite={SVG} spriteId=\"icon-moon\" />\n      ) : (\n        <AddSvg component={Vector} sprite={SVG} spriteId=\"icon-sun\" />\n      )}\n    </Button>\n  );\n};\n\nexport default ThemeToggleBtn;\n","import styled from 'styled-components';\n\nconst whiteColor = '#fff';\n\nexport const UserInfoWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n\n  @media screen and (min-width: 768px) {\n    gap: 14px;\n  }\n`;\n\nexport const UserName = styled.p`\n  color: var(--second-Text-Color);\n  font-family: 'Inter Bold';\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 700;\n  line-height: 18px;\n  transition: color var(--theme-cubic);\n\n  @media screen and (min-width: 768px) {\n    font-size: 18px;\n  }\n`;\n\nexport const UserAvatar = styled.p`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 32px;\n  height: 32px;\n  border-radius: 50%;\n  color: ${whiteColor};\n  background-color: var(--fourth-Bckg-Color);\n  font-family: 'Inter Bold';\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 700;\n  line-height: 18px;\n\n  @media screen and (min-width: 768px) {\n    width: 44px;\n    height: 44px;\n    font-size: 18px;\n  }\n`;\n\nexport const UserAvatarImg = styled.img`\n  width: 32px;\n  height: 32px;\n  border: 1.8px solid var(--fourth-Bckg-Color);\n  border-radius: 50%;\n  object-fit: cover;\n\n  @media screen and (min-width: 768px) {\n    width: 44px;\n    height: 44px;\n  }\n`;\n","import {\n  UserInfoWrapper,\n  UserName,\n  UserAvatar,\n  UserAvatarImg,\n} from './UserInfo.styled';\nimport { useSelector } from 'react-redux';\nimport { selectUser } from 'redux/auth/selectors';\n\nconst UserInfo = () => {\n  const user = useSelector(selectUser);\n\n  return (\n    <UserInfoWrapper>\n      <UserName>{user.name}</UserName>\n\n      {user.avatarURL ? (\n        <UserAvatarImg src={`${user.avatarURL}`} alt=\"User\" />\n      ) : (\n        <UserAvatar>{user.name.slice(0, 1)}</UserAvatar>\n      )}\n    </UserInfoWrapper>\n  );\n};\n\nexport default UserInfo;\n","const selectUserReview = state => state.review.user;\nconst selectError = state => state.review.error;\nconst selectIsLoading = state => state.review.isLoading;\n\nexport { selectIsLoading, selectUserReview, selectError };\n","import Ratings from 'react-ratings-declarative';\nimport { ReactComponent as Star } from 'images/icons/star.svg';\n\nexport const StarRating = ({ isSelectable, rating, setRating }) => {\n  const changeRating = newRating => {\n    setRating('rating', newRating);\n  };\n\n  return (\n    <Ratings\n      rating={rating}\n      {...(isSelectable && { changeRating })}\n      widgetDimensions=\"24px\"\n      widgetSpacings=\"0\"\n    >\n      <Ratings.Widget widgetRatedColor=\"#FFAC33\" svgs=<Star /> />\n      <Ratings.Widget widgetRatedColor=\"#FFAC33\" svgs=<Star /> />\n      <Ratings.Widget widgetRatedColor=\"#FFAC33\" svgs=<Star /> />\n      <Ratings.Widget widgetRatedColor=\"#FFAC33\" svgs=<Star /> />\n      <Ratings.Widget widgetRatedColor=\"#FFAC33\" svgs=<Star /> />\n    </Ratings>\n  );\n};\n","import { Form } from 'formik';\nimport { styled } from 'styled-components';\n\nexport const FeedbackForm = styled(Form)`\n  position: relative;\n`;\n\nexport const CloseBtn = styled.div`\n  position: absolute;\n  top: -8px;\n  right: -8px;\n  width: 25px;\n  height: 25px;\n  cursor: pointer;\n  z-index: 10;\n  transition: all 0.3s;\n  &:hover {\n    transform: scale(1.1);\n  }\n`;\n\nexport const Label = styled.label`\n  position: relative;\n  display: grid;\n  gap: 8px;\n  margin-bottom: 14px;\n  color: var(--first-Feedback-Text-Color);\n  font-size: 12px;\n  font-weight: 500;\n  line-height: 14px;\n`;\n\nexport const Textarea = styled.textarea`\n  width: 100%;\n  padding: 12px;\n  margin-top: 8px;\n  border-radius: 8px;\n  border: none;\n  resize: none;\n  font-size: 14px;\n  font-weight: 600;\n  line-height: 18px;\n  border: 1px solid rgba(255, 255, 255, 0.15);\n  color: var(--second-Feedback-Text-Color);\n  background: var(--second-Feedback-Bckg-Color);\n  &:focus-visible {\n    outline: none;\n  }\n`;\n\nexport const ReviewBtnWrapper = styled.div`\n  display: flex;\n  gap: 10px;\n`;\n\nconst ReviewBtn = styled.button`\n  padding: 8px 20px 8px 20px;\n  width: 100%;\n  height: 42px;\n  border-radius: 8px;\n  border: none;\n  cursor: pointer;\n  transition: all 0.3s;\n  &:hover {\n    box-shadow: 2px 2px 2px 1px rgba(62, 133, 243, 0.4);\n    transform: scale(1.05);\n  }\n`;\n\nexport const MainReviewBtn = styled(ReviewBtn)`\n  background: #3e85f3;\n  color: #fff;\n`;\n\nexport const CancelReviewBtn = styled(ReviewBtn)`\n  background: var(--second-Bckg-Btn-color);\n  color: #343434;\n`;\n\nexport const EditBtnWrapper = styled.div`\n  position: absolute;\n  display: flex;\n  gap: 8px;\n  top: -8px;\n  right: 0;\n`;\n\nexport const EditBtn = styled.button`\n  display: flex;\n  width: 30px;\n  height: 30px;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  border-radius: 50%;\n  border: none;\n  transition: all 0.3s;\n  cursor: pointer;\n  &:hover {\n    box-shadow: 0px 1px 2px 1px rgba(62, 133, 243, 0.1),\n      0px -1px 2px 1px rgba(62, 133, 243, 0.1),\n      1px 0px 2px 1px rgba(62, 133, 243, 0.1),\n      -1px 0px 2px 1px rgba(62, 133, 243, 0.1);\n    transform: scale(1.05);\n  }\n`;\n\nexport const DeleteBtn = styled(EditBtn)`\n  cursor: pointer;\n  background: rgba(234, 61, 101, 0.2);\n`;\n\nexport const ErrorBox = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 30px;\n`;\n\nexport const ErrorWrapper = styled.div`\n  font-size: 16px;\n  line-height: 18px;\n  color: red;\n`;\n\nexport const VectorWhite = styled.svg`\n  width: 16px;\n  height: 16px;\n  fill: #fff;\n`;\n\nexport const VectorBlue = styled.svg`\n  width: 16px;\n  height: 16px;\n  fill: #3e85f3;\n`;\n\nexport const VectorPink = styled.svg`\n  width: 16px;\n  height: 16px;\n  fill: #ea3d65;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { selectError, selectUserReview } from 'redux/review/selectors';\nimport * as reviewOperations from 'redux/review/operations';\nimport { useState } from 'react';\nimport { Formik, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport { StarRating } from './StarRating';\nimport AddSvg from 'components/AddSvg/AddSvg';\nimport getSvg from 'utils/getSvg';\nimport * as SC from './FeedbackForm.styled';\n\nexport const FeedbackForm = ({ close }) => {\n  const currentUser = useSelector(selectUserReview);\n  const error = useSelector(selectError);\n  const dispatch = useDispatch();\n\n  const SVG = getSvg();\n\n  const [readOnly, setReadOnly] = useState(!!currentUser.comment);\n\n  const checkErrorForCloseModal = ({ meta }) => {\n    if (meta.requestStatus === 'fulfilled') {\n      close();\n    }\n  };\n\n  const onSubmitFeedback = values => {\n    const credentials = {\n      comment: values.comment,\n      rating: values.rating,\n    };\n\n    if (!currentUser.comment) {\n      dispatch(reviewOperations.postReview(credentials)).then(\n        checkErrorForCloseModal\n      );\n    } else {\n      dispatch(reviewOperations.updateReview(credentials)).then(\n        checkErrorForCloseModal\n      );\n    }\n  };\n\n  const onDeleteReview = () => {\n    dispatch(reviewOperations.deleteReview()).then(checkErrorForCloseModal);\n  };\n\n  const reloadPage = () => {\n    // eslint-disable-next-line no-restricted-globals\n    location.reload();\n  };\n\n  const FeedbackSchema = Yup.object().shape({\n    comment: Yup.string()\n      .min(10, 'Too short message!')\n      .max(300, 'Too long message!')\n      .required(\"You haven't written anything\"),\n    rating: Yup.number().min(1).max(5).required(),\n  });\n\n  const initialValues = {\n    comment: currentUser.comment,\n    rating: currentUser.rating,\n  };\n\n  return (\n    <>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={FeedbackSchema}\n        onSubmit={onSubmitFeedback}\n        validateOnChange={false}\n      >\n        {({ values, setFieldValue }) => {\n          return !error ? (\n            <SC.FeedbackForm>\n              <SC.Label>\n                Raiting\n                <StarRating\n                  name=\"rating\"\n                  isSelectable={!readOnly}\n                  rating={values.rating}\n                  setRating={setFieldValue}\n                />\n              </SC.Label>\n              <SC.Label htmlFor=\"reviewTextAreaId\">\n                {currentUser.comment && (\n                  <SC.EditBtnWrapper>\n                    <SC.EditBtn\n                      type=\"button\"\n                      style={{\n                        backgroundColor: readOnly ? '#e5edfa' : '#3e85f3',\n                      }}\n                      onClick={() => setReadOnly(false)}\n                      aria-label=\"Edit review\"\n                    >\n                      {readOnly ? (\n                        <AddSvg\n                          component={SC.VectorBlue}\n                          sprite={SVG}\n                          spriteId={'pencil-icon'}\n                        />\n                      ) : (\n                        <AddSvg\n                          component={SC.VectorWhite}\n                          sprite={SVG}\n                          spriteId={'pencil-icon'}\n                        />\n                      )}\n                    </SC.EditBtn>\n                    <SC.DeleteBtn\n                      type=\"button\"\n                      onClick={onDeleteReview}\n                      aria-label=\"Delete review\"\n                    >\n                      <AddSvg\n                        component={SC.VectorPink}\n                        sprite={SVG}\n                        spriteId={'trash-second-icon'}\n                      />\n                    </SC.DeleteBtn>\n                  </SC.EditBtnWrapper>\n                )}\n                Review\n                <Field\n                  id=\"reviewTextAreaId\"\n                  name=\"comment\"\n                  as={SC.Textarea}\n                  rows={6}\n                  cols={40}\n                  placeholder=\"Enter text\"\n                  maxLength={300}\n                  readOnly={readOnly}\n                />\n                <SC.ErrorBox>\n                  <SC.ErrorWrapper>\n                    <ErrorMessage name=\"comment\" />\n                  </SC.ErrorWrapper>\n                  <SC.ErrorWrapper>\n                    <ErrorMessage name=\"rating\" />\n                  </SC.ErrorWrapper>\n                </SC.ErrorBox>\n              </SC.Label>\n              {!readOnly && (\n                <SC.ReviewBtnWrapper>\n                  {!currentUser.comment ? (\n                    <SC.MainReviewBtn type=\"submit\">Save</SC.MainReviewBtn>\n                  ) : (\n                    <SC.MainReviewBtn type=\"submit\">Edit</SC.MainReviewBtn>\n                  )}\n                  <SC.CancelReviewBtn type=\"button\" onClick={close}>\n                    Cancel\n                  </SC.CancelReviewBtn>\n                </SC.ReviewBtnWrapper>\n              )}\n            </SC.FeedbackForm>\n          ) : (\n            <SC.ErrorBox>\n              <h1>Something was wrong</h1>\n              <SC.MainReviewBtn type=\"submit\" onClick={reloadPage}>\n                Reload\n              </SC.MainReviewBtn>\n            </SC.ErrorBox>\n          );\n        }}\n      </Formik>\n    </>\n  );\n};\n","import { styled } from 'styled-components';\n\nexport const FeedbackButton = styled.button`\n  padding: 8px 20px;\n  border-radius: 10px;\n  border: none;\n  background-color: #3e85f3;\n  color: #fff;\n  text-align: center;\n  font-family: 'Inter SemiBold';\n  font-size: 12px;\n  font-weight: 600;\n  line-height: 16px;\n  transition: background-color var(--cubic);\n  cursor: pointer;\n  @media screen and (min-width: 768px) {\n    padding: 12px 32px;\n    border-radius: 14px;\n    font-size: 14px;\n    line-height: 18px;\n  }\n  &:hover,\n  &:focus {\n    background-color: #2b78ef;\n  }\n`;\n","import { Modal } from 'components/Modal/Modal';\nimport { FeedbackForm } from 'components/FeedbackForm/FeedbackForm';\nimport useModalToggle from 'hooks/useModalToggle';\nimport * as SC from './FeedbackButton.styled';\n\nexport const FeedbackButton = () => {\n  const { showModal, onToggleModal } = useModalToggle();\n\n  return (\n    <>\n      <SC.FeedbackButton type=\"button\" onClick={onToggleModal}>\n        Feedback\n      </SC.FeedbackButton>\n      {showModal && (\n        <Modal onToggleModal={onToggleModal}>\n          <FeedbackForm close={onToggleModal} />\n        </Modal>\n      )}\n    </>\n  );\n};\n","import {\n  HeaderContainer,\n  HeaderTitleWrapperNoGoose,\n  Title,\n  HeaderTitleWrapperGoose,\n  GooseMentorImg,\n  TxtWrapper,\n  Motivator,\n  HeaderMenuWrapper,\n  UserInfoWrapper,\n  BurgerBtn,\n  Vector,\n} from './Header.styled';\nimport { IMG } from '../../images';\nimport ThemeToggleBtn from './ThemeToggleBtn';\nimport UserInfo from './UserInfo';\nimport { useLocation } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectTasks } from 'redux/tasks/selectors';\nimport { FeedbackButton } from 'components/FeedbackButton/FeedbackButton';\nimport AddSvg from 'components/AddSvg/AddSvg';\nimport getSvg from '../../utils/getSvg';\nimport { useEffect } from 'react';\nimport useAuth from 'hooks/useAuth';\nimport { getReview } from 'redux/review/operations';\n\nconst { gooseMentor1x, gooseMentor2x } = IMG;\nconst SVG = getSvg();\n\nconst Header = ({ isSideBarOpened, openSideBar }) => {\n  const tasks = useSelector(selectTasks);\n  const location = useLocation();\n\n  const pageConfig = [\n    { path: 'account', page: 'User Profile' },\n    { path: 'calendar', page: 'Calendar' },\n    { path: 'statistics', page: 'Statistics' },\n  ];\n\n  const activePage = pageConfig.find(item =>\n    location.pathname.includes(item.path)\n  ).page;\n\n  const dispatch = useDispatch();\n  const { isLoggedIn } = useAuth();\n\n  useEffect(() => {\n    if (isLoggedIn) dispatch(getReview());\n  }, [dispatch, isLoggedIn]);\n\n  return (\n    <HeaderContainer>\n      {(tasks.length < 1 ||\n        (tasks.length > 0 && activePage !== 'Calendar')) && (\n        <HeaderTitleWrapperNoGoose>\n          <Title>{activePage}</Title>\n        </HeaderTitleWrapperNoGoose>\n      )}\n\n      {tasks.length > 0 && activePage === 'Calendar' && (\n        <HeaderTitleWrapperGoose>\n          <picture>\n            <source\n              srcSet={`${gooseMentor1x} 1x, ${gooseMentor2x} 2x`}\n              media=\"(min-width: 1440px)\"\n              type=\"image/webp\"\n            />\n            <GooseMentorImg\n              src={`${gooseMentor1x}`}\n              alt=\"GooseMentor\"\n              width=\"64\"\n            />\n          </picture>\n          <TxtWrapper>\n            <Title>{activePage}</Title>\n            <Motivator>\n              <span>Let go</span> of the past and focus on the present!\n            </Motivator>\n          </TxtWrapper>\n        </HeaderTitleWrapperGoose>\n      )}\n\n      {!isSideBarOpened && (\n        <BurgerBtn\n          type=\"button\"\n          aria-label=\"Open mobile menu\"\n          onClick={openSideBar}\n        >\n          <AddSvg component={Vector} sprite={SVG} spriteId=\"burger-icon\" />\n        </BurgerBtn>\n      )}\n\n      <HeaderMenuWrapper>\n        <FeedbackButton />\n        <UserInfoWrapper>\n          <ThemeToggleBtn />\n          <UserInfo />\n        </UserInfoWrapper>\n      </HeaderMenuWrapper>\n    </HeaderContainer>\n  );\n};\n\nexport default Header;\n","import { Suspense } from 'react';\nimport { Outlet } from 'react-router-dom';\nimport {\n  MainContainer,\n  ContentWrapper,\n  ContentInnerBox,\n} from './MainLayout.styled';\nimport SideBar from 'components/SideBar/SideBar';\nimport Header from 'components/Header/Header';\nimport { Loader } from 'components/Loader/Loader';\nimport useAuth from 'hooks/useAuth';\nimport { useState, useEffect, useCallback } from 'react';\nimport { useMediaQuery } from 'react-responsive';\n\nconst MainLayout = () => {\n  const { isLoggedIn } = useAuth();\n  const [isSideBarOpened, setIsSideBarOpened] = useState(false);\n  const isDesktop = useMediaQuery({ minWidth: 1440 });\n\n  function addScrollLock() {\n    document.body.classList.add('add-scroll-lock');\n  }\n\n  function removeScrollLock() {\n    document.body.classList.remove('add-scroll-lock');\n  }\n\n  function openSideBar() {\n    setIsSideBarOpened(true);\n    addScrollLock();\n  }\n\n  const closeSideBar = useCallback(() => {\n    setIsSideBarOpened(false);\n    removeScrollLock();\n  }, []);\n\n  useEffect(() => {\n    if (isDesktop) {\n      closeSideBar();\n    }\n  }, [isDesktop, closeSideBar]);\n\n  return (\n    <>\n      {isLoggedIn && (\n        <MainContainer>\n          <SideBar\n            isSideBarOpened={isSideBarOpened}\n            closeSideBar={closeSideBar}\n          />\n          <ContentWrapper>\n            <ContentInnerBox>\n              <Header\n                isSideBarOpened={isSideBarOpened}\n                openSideBar={openSideBar}\n              />\n              <Suspense fallback={<Loader />}>\n                <Outlet />\n              </Suspense>\n            </ContentInnerBox>\n          </ContentWrapper>\n        </MainContainer>\n      )}\n    </>\n  );\n};\n\nexport default MainLayout;\n"],"names":["MainContainer","styled","_templateObject","_taggedTemplateLiteral","ContentWrapper","_templateObject2","ContentInnerBox","_templateObject3","SideBarBox","TopWrapper","SideBarBackdrop","SideBarLogoWrapper","LogoImg","LogoTxt","CloseSideBarBtn","_templateObject4","Vector","_templateObject5","gooseMobile1x","IMG","gooseMobile2x","gooseTablet1x","gooseTablet2x","gooseDesktop1x","gooseDesktop2x","SVG","getSvg","_ref","closeSideBar","_jsxs","children","_jsx","srcSet","concat","media","type","src","alt","width","onClick","AddSvg","component","sprite","spriteId","UserNavWrapper","UserNavHeading","UserNavList","UserNavItem","UserNavLink","NavLink","_templateObject6","UserNavTxt","_templateObject7","linkTo","iconId","linkName","map","_ref2","to","Btn","Txt","dispatch","useDispatch","navigate","useNavigate","logout","replace","isSideBarOpened","_Fragment","className","SideBarLogo","UserNav","LogoutBtn","HeaderContainer","HeaderTitleWrapperNoGoose","Title","HeaderTitleWrapperGoose","GooseMentorImg","TxtWrapper","Motivator","BurgerBtn","_templateObject8","_templateObject9","HeaderMenuWrapper","_templateObject10","UserInfoWrapper","_templateObject11","Button","_useState","useState","localStorage","getItem","_useState2","_slicedToArray","theme","setTheme","useEffect","document","body","setAttribute","setItem","UserName","UserAvatar","UserAvatarImg","user","useSelector","selectUser","name","avatarURL","slice","selectUserReview","state","review","selectError","error","StarRating","isSelectable","rating","setRating","Ratings","_objectSpread","changeRating","newRating","widgetDimensions","widgetSpacings","widgetRatedColor","svgs","Star","FeedbackForm","Form","Label","Textarea","ReviewBtnWrapper","ReviewBtn","MainReviewBtn","CancelReviewBtn","EditBtnWrapper","EditBtn","DeleteBtn","ErrorBox","_templateObject12","ErrorWrapper","_templateObject13","VectorWhite","_templateObject14","VectorBlue","_templateObject15","VectorPink","_templateObject16","close","currentUser","comment","readOnly","setReadOnly","checkErrorForCloseModal","meta","requestStatus","onDeleteReview","reviewOperations","then","reloadPage","location","reload","FeedbackSchema","Yup","shape","min","max","required","initialValues","Formik","validationSchema","onSubmit","values","credentials","validateOnChange","_ref3","setFieldValue","SC","htmlFor","style","backgroundColor","Field","id","as","rows","cols","placeholder","maxLength","ErrorMessage","FeedbackButton","_useModalToggle","useModalToggle","showModal","onToggleModal","Modal","gooseMentor1x","gooseMentor2x","openSideBar","tasks","selectTasks","useLocation","activePage","path","page","find","item","pathname","includes","isLoggedIn","useAuth","getReview","length","ThemeToggleBtn","UserInfo","setIsSideBarOpened","isDesktop","useMediaQuery","minWidth","useCallback","classList","remove","SideBar","Header","add","Suspense","fallback","Loader","Outlet"],"sourceRoot":""}