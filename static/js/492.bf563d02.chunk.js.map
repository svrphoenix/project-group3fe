{"version":3,"file":"static/js/492.bf563d02.chunk.js","mappings":"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","sources":["components/authNavigate/AuthNavigate.styled.jsx","components/authNavigate/AuthNavigate.jsx","components/registerLoginForm/RegisterLoginForm.styled.jsx","components/registerLoginForm/RegisterForm.jsx","pages/RegisterPage/RegisterPage.styled.jsx","pages/RegisterPage/RegisterPage.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\n\nexport const StyledNavigate = styled(NavLink)`\n    color: #3E85F3;\n    text-shadow: 0px 9.399999618530273px 57.6875px rgba(0, 0, 0, 0.04), 0px 47px 355px rgba(0, 0, 0, 0.07);\n    font-family: Inter SemiBold;\n    font-size: 12px;\n    line-height: 1.16;\n    text-decoration-line: underline;\n    margin: 0 auto;\n    cursor: pointer;\n    display: block;\n    text-align: center;\n    margin-top: 18px;\n    transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    &:hover, &:focus {\n        color: #2b78ef;\n        text-decoration-line: none;\n    }\n    @media (min-width: 768px) {\n    font-size: 18px;\n    line-height: 1.33;\n    margin-top: 24px;\n    }\n`\n","import PropTypes from 'prop-types';\nimport { StyledNavigate } from './AuthNavigate.styled';\n\n\nexport const AuthNavigate = ({ path, text }) => {\n    return <StyledNavigate to={path}>{text}</StyledNavigate>\n}\n\nAuthNavigate.propTypes = {\n    path: PropTypes.string.isRequired,\n    text: PropTypes.string.isRequired,\n};\n","import styled, { css } from 'styled-components';\nimport { Form, Field } from 'formik';\n\nexport const StyledContainer = styled.div`\n  display: flex;\n  margin: 0 auto;\n  box-sizing: border-box;\n  width: (100%-40px);\n  padding: 40px 15px;\n  flex-direction: column;\n  justify-content: center;\n  align-items: flex-start;\n  gap: 32px;\n  border-radius: 8px;\n  background: #fff;\n  @media (min-width: 375px) {\n    width: 335px;\n    padding: 40px 24px;\n  }\n  @media (min-width: 768px) {\n    width: 480px;\n    padding: 40px;\n    gap: 40px;\n  }\n`;\n\nexport const StyledHeader = styled.h1`\n  color: #3e85f3;\n  text-shadow: 0px 9.399999618530273px 57.6875px rgba(0, 0, 0, 0.04),\n    0px 47px 355px rgba(0, 0, 0, 0.07);\n  font-family: Inter SemiBold;\n  font-size: 18px;\n  line-height: 1.3;\n  margin: 0;\n  @media (min-width: 768px) {\n    font-size: 24px;\n    line-height: 1;\n  }\n`;\n\nexport const StyledFormDiv = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  width: 100%;\n  gap: 8px;\n`;\n\nexport const StyledForm = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  gap: 24px;\n  width: 100%;\n  @media (min-width: 768px) {\n    gap: 18px;\n  }\n`;\n\nexport const Styledlabel = styled.label`\n  ${props => {\n    switch (props.$validate) {\n      case 'error':\n        return css`\n          color: rgba(231, 74, 59, 1);\n        `;\n      case 'empty':\n        return css`\n          color: #3e85f3;\n        `;\n      case 'okay':\n        return css`\n          color: rgba(60, 188, 129, 1);\n        `;\n      default:\n        return css`\n          color: #111;\n        `;\n    }\n  }}\n  font-family: Inter SemiBold;\n  font-size: 12px;\n  @media (min-width: 768px) {\n    font-size: 14px;\n  }\n`;\n\nexport const StyledField = styled(Field)`\n  ${props => {\n    switch (props.$validate) {\n      case 'error':\n        return css`\n          border: 1px solid rgba(231, 74, 59, 1);\n        `;\n      case 'okay':\n        return css`\n          border: 1px solid rgba(60, 188, 129, 1);\n        `;\n      case 'empty':\n        return css`\n          border: 1px solid #3e85f3;\n        `;\n      default:\n        return css`\n          border: 1px solid rgba(220, 227, 229, 0.6);\n        `;\n    }\n  }}\n  width: 100%;\n  height: 46px;\n  border-radius: 8px;\n  box-sizing: border-box;\n  background: #fff;\n  padding: 14px;\n  color: #111;\n  font-family: Inter, sans-serif;\n  font-size: 14px;\n  font-style: normal;\n  line-height: 1.3;\n  transition: border 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover,\n  &:focus {\n    border: 1px solid #111;\n  }\n  &::placeholder {\n    color: #dce3e5;\n    font-family: Inter Regular;\n    font-size: 14px;\n    line-height: 1.28;\n  }\n  @media (min-width: 768px) {\n    font-size: 16px;\n    line-height: 1.13;\n    height: 54px;\n  }\n`;\n\nexport const StyledFieldPassword = styled(StyledField)`\n  font-family: Inter Bold;\n  font-weight: 900;\n  letter-spacing: 6px;\n  &::placeholder {\n    padding-top:6px;\n    font-size: 14px;\n    font-weight: 400;\n    letter-spacing: 0px;\n    \n  }\n`\n\nexport const StyledFieldPasswordLogin = styled(StyledFieldPassword)`\n  &::placeholder {\n    font-family: Inter Bold;\n    font-weight: 900;\n    letter-spacing: 6px;\n    line-height: 1.28;\n  }\n`\n\nexport const StyledRequired = styled.div`\n  color: #3e85f3;\n  font-family: Inter Regular;\n  font-size: 12px;\n  line-height: 1.16;\n  @media (min-width: 768px) {\n    font-size: 14px;\n    line-height: 1.3;\n  }\n`;\n\nexport const StyledError = styled(StyledRequired)`\n  color: rgba(231, 74, 59, 1);\n`;\n\nexport const StyledButton = styled.button`\n  display: flex;\n  width: 100%;\n  padding: 14px;\n  align-items: center;\n  gap: 10px;\n  border-radius: 16px;\n  border: none;\n  cursor: pointer;\n  background: #3e85f3;\n  box-shadow: 4px 2px 16px 0px rgba(136, 165, 191, 0.48);\n  color: #fff;\n  font-family: Inter SemiBold;\n  font-size: 14px;\n  line-height: 1.28;\n  letter-spacing: -0.28px;\n  margin-top: 12px;\n  justify-content: center;\n  transition: background 250ms cubic-bezier(0.4, 0, 0.2, 1),\n  box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover,\n  &:focus {\n    background: #2b78ef;\n    box-shadow: 4px 2px 16px 0px rgba(136, 165, 191, 0.48);\n  }\n  @media (min-width: 768px) {\n    margin-top: 30px;\n    font-size: 18px;\n    letter-spacing: -0.36px;\n    line-height: 1.33;\n  }\n`;","import React from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { useState } from 'react';\nimport {\n    StyledButton,\n    StyledContainer,\n    StyledError,\n    StyledField,\n    StyledFieldPassword,\n    StyledForm,\n    StyledFormDiv,\n    StyledHeader,\n    Styledlabel,\n    StyledRequired,\n} from './RegisterLoginForm.styled';\nimport { register } from 'redux/auth/operations';\nimport { SVG } from 'images';\n\nconst SignupSchema = Yup.object().shape({\n  name: Yup.string()\n    .min(3, 'Too Short!')\n    .max(20, 'Too Long!')\n    .required('Please enter your name'),\n  email: Yup.string()\n    .email('This is an ERROR email')\n    .required('Please enter your email')\n    .matches(/^[a-z0-9.]+@[a-z]+\\.[a-z]{2,3}$/),\n  password: Yup.string()\n    .min(8, 'Need to be more than 8 symbols!')\n    .required('Please enter your password')\n    .matches(/^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{8,30}$/),\n});\n\nconst RegisterForm = () => {\n    const navigate = useNavigate();\n    const dispatch = useDispatch();\n    const [usedEmail, setUsedEmail] = useState(false);\n\n    return  (<StyledContainer>\n        <StyledHeader>Sign Up</StyledHeader>\n        <Formik\n            initialValues={{\n                name: '',\n                email: '',\n                password: '',\n            }}\n            validateOnChange={false}\n            validateOnBlur={true}\n            validationSchema={SignupSchema}\n            onSubmit={async(values, { resetForm }) => {\n                try {\n                    const response = await dispatch(\n                        register({\n                            name: values.name,\n                            email: values.email,\n                            password: values.password,\n                        }));\n                    if (response.meta.requestStatus !== \"rejected\") {\n                        resetForm();\n                        navigate(\"/calendar\");\n                    } else {\n                        if (response.payload.includes(\"409\")) {\n                            setUsedEmail(true);\n                        }\n                    }\n                } catch (error) {\n                    alert(\"Sorry, problem at server\")\n                }\n        \n            }}\n        >\n            {({ errors, touched }) => {\n                return (\n                    <StyledForm>\n                        <StyledFormDiv>\n                            <Styledlabel\n                                htmlFor=\"name\"\n                                $validate={\n                                    (errors.name === 'Please enter your name' &&\n                                        touched.name &&\n                                        'empty') ||\n                                    (errors.name && touched.name && 'error') ||\n                                    (touched.name && 'okay')\n                                }\n                            >\n                                Name\n                            </Styledlabel>\n                            <StyledField\n                                name=\"name\"\n                                placeholder=\"Enter your name\"\n                                $validate={\n                                    (errors.name === 'Please enter your name' &&\n                                        touched.name &&\n                                        'empty') ||\n                                    (errors.name && touched.name && 'error') ||\n                                    (touched.name && 'okay')\n                                }\n                            />\n                            {(errors.name === 'Please enter your name' && touched.name && (\n                                <StyledRequired>{errors.name}</StyledRequired>\n                            )) ||\n                                (errors.name && touched.name && (\n                                    <StyledError>{errors.name}</StyledError>\n                                ))}\n                        </StyledFormDiv>\n                        <StyledFormDiv>\n                            <Styledlabel\n                                htmlFor=\"email\"\n                                $validate={\n                                    (errors.email === 'Please enter your email' &&\n                                        touched.email &&\n                                        'empty') ||\n                                    (((errors.email && (errors.email === \"This is an ERROR email\" || errors.email.includes(\"match\"))) || usedEmail) && 'error') ||\n                                    (touched.email && 'okay')\n                                }\n                            >\n                                Email\n                            </Styledlabel>\n                            <StyledField\n                                name=\"email\"\n                                type=\"email\"\n                                placeholder=\"Enter email\"\n                                $validate={\n                                    (errors.email === 'Please enter your email' &&\n                                        touched.email &&\n                                        'empty') ||\n                                    (((errors.email && (errors.email === \"This is an ERROR email\" || errors.email.includes(\"match\"))) || usedEmail) && 'error') ||\n                                    (touched.email && 'okay')\n                                }\n                            />\n                            {(errors.email === 'Please enter your email' && touched.email && (\n                                <StyledRequired>{errors.email}</StyledRequired>\n                            )) ||\n                            (errors.email && (errors.email === \"This is an ERROR email\" || errors.email.includes(\"match\"))&& (\n                                <StyledError>This is an ERROR email</StyledError>\n                            )) ||\n                            (usedEmail && (\n                                <StyledError>This user is already exist</StyledError>\n                            ))}\n                        </StyledFormDiv>\n                        <StyledFormDiv>\n                            <Styledlabel\n                                htmlFor=\"password\"\n                                $validate={\n                                    (errors.password === 'Please enter your password' &&\n                                        touched.password &&\n                                        'empty') ||\n                                    (errors.password && touched.password && 'error') ||\n                                    (touched.password && 'okay')\n                                }\n                            >\n                                Password\n                            </Styledlabel>\n                            <StyledFieldPassword\n                                name=\"password\"\n                                type=\"password\"\n                                placeholder=\"Enter password\"\n                                $validate={\n                                    (errors.password === 'Please enter your password' &&\n                                        touched.password &&\n                                        'empty') ||\n                                    (errors.password && touched.password && 'error') ||\n                                    (touched.password && 'okay')\n                                }\n                            />\n                            {(errors.password === 'Please enter your password' &&\n                                touched.password && (\n                                    <StyledRequired>{errors.password}</StyledRequired>\n                                )) ||\n                                (errors.password && errors.password.includes('password must match the following') && touched.password && (\n                                    <StyledError>This password should contain  at least eight characters and at least one number and one letter</StyledError>\n                                )) ||\n                                (errors.password && touched.password && (\n                                    <StyledError>{errors.password}</StyledError>\n                                ))\n                            }\n                        </StyledFormDiv>\n                        <StyledButton type=\"submit\">Sign Up\n                            <SVG.LoginWhiteIcon />\n                        </StyledButton>\n                    </StyledForm>\n                );\n            }}\n        </Formik>\n    </StyledContainer>)\n};\n\nexport default RegisterForm;","import styled from 'styled-components';\n\nexport const StyledLayout = styled.div`\n  margin: 0 auto;\n  width: 100%;\n  padding: 155px 15px 156px 15px;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  background: #dcebf7;\n  @media (min-width: 768px) {\n    padding-top: 227px;\n  }\n  @media (min-width: 1440px) {\n    padding-top: 124px;\n  }\n`;\n","\nimport { AuthNavigate } from 'components/authNavigate/AuthNavigate';\nimport RegisterForm from 'components/registerLoginForm/RegisterForm';\nimport { StyledLayout } from './RegisterPage.styled';\n\n\nconst RegisterPage = () => {\n  return (\n    <StyledLayout>\n      <RegisterForm />\n      <AuthNavigate path=\"/login\" text=\"Log In\"/>\n    </StyledLayout>\n  );\n};\n\nexport default RegisterPage;\n"],"names":["StyledNavigate","styled","NavLink","_templateObject","_taggedTemplateLiteral","AuthNavigate","_ref","path","text","_jsx","to","children","StyledContainer","StyledHeader","_templateObject2","StyledFormDiv","_templateObject3","StyledForm","Form","_templateObject4","Styledlabel","_templateObject5","props","$validate","css","_templateObject6","_templateObject7","_templateObject8","_templateObject9","StyledField","Field","_templateObject10","_templateObject11","_templateObject12","_templateObject13","_templateObject14","StyledFieldPassword","_templateObject15","StyledFieldPasswordLogin","_templateObject16","StyledRequired","_templateObject17","StyledError","_templateObject18","StyledButton","_templateObject19","SignupSchema","Yup","shape","name","min","max","required","email","matches","password","navigate","useNavigate","dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","usedEmail","setUsedEmail","_jsxs","Formik","initialValues","validateOnChange","validateOnBlur","validationSchema","onSubmit","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","values","resetForm","response","wrap","_context","prev","next","register","sent","meta","requestStatus","payload","includes","t0","alert","stop","_x","_x2","apply","arguments","_ref3","errors","touched","htmlFor","placeholder","type","SVG","StyledLayout","RegisterForm"],"sourceRoot":""}