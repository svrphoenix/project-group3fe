{"version":3,"file":"static/js/705.cfcb129f.chunk.js","mappings":"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","sources":["components/CalendarToolbar/PeriodPaginator/PeriodPaginator.styled.js","components/CalendarToolbar/PeriodPaginator/PeriodPaginator.jsx","components/CalendarToolbar/PeriodTypeSelect/PeriodTypeSelect.styled.js","components/CalendarToolbar/PeriodTypeSelect/PeriodTypeSelect.jsx","components/CalendarToolbar/CalendarToolbar.styled.js","components/CalendarToolbar/CalendarToolbar.jsx","pages/CalendarPage/CalendarPage.jsx"],"sourcesContent":["const { css, styled } = require('styled-components');\n\nconst sharedStyle = css`\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  position: relative;\n  outline: 0px;\n  border: 0px;\n  cursor: pointer;\n  user-select: none;\n  vertical-align: middle;\n  appearance: none;\n  text-decoration: none;\n  min-width: 38px;\n  padding: 8px 12px;\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  background-color: #fff;\n  &:disabled {\n    color: #dce3e5;\n  }\n  &:hover {\n    background-color: #f8f8f8;\n  }\n`;\n\nexport const PeriodPaginatorWrapper = styled.div`\n  display: inline-flex;\n  align-items: center;\n  vertical-align: middle;\n  justify-content: space-between;\n  margin-bottom: 18px;\n  @media screen and (min-width: 768px) {\n    justify-content: initial;\n    margin-bottom: initial;\n  }\n`;\n\nexport const PeriodPaginatorDisplay = styled.div`\n  color: #fff;\n  text-align: center;\n  font-family: 'Inter Bold';\n  font-size: 16px;\n  line-height: 1.13;\n  text-transform: uppercase;\n  border-radius: 8px;\n  background-color: #3e85f3;\n  padding: 8px 12px;\n  margin-right: 8px;\n`;\n\nexport const ButtonGroup = styled.div`\n  display: inline-flex;\n  border: 1px solid rgba(220, 227, 229, 0.8);\n  border-radius: 8px;\n`;\n\nexport const Button = styled.button`\n  color: #343434;\n  &:first-child {\n    border-top-left-radius: 8px;\n    border-bottom-left-radius: 8px;\n    border-right: 1px solid rgba(220, 227, 229, 0.5);\n  }\n  &:last-child {\n    border-top-right-radius: 8px;\n    border-bottom-right-radius: 8px;\n  }\n  ${sharedStyle};\n`;\n","import { SVG } from 'images';\nimport * as SC from './PeriodPaginator.styled';\nimport PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\nimport { selectUser } from 'redux/auth/selectors';\nimport { parse, parseISO } from 'date-fns';\n\nconst PeriodPaginator = ({ date, prevHandler, nextHandler }) => {\n  const { createdAt } = useSelector(selectUser);\n  return (\n    <SC.PeriodPaginatorWrapper>\n      <SC.PeriodPaginatorDisplay>{date}</SC.PeriodPaginatorDisplay>\n      <SC.ButtonGroup>\n        <SC.Button\n          disabled={parseISO(createdAt) > parse(date, 'MMMM yyyy', new Date())}\n          onClick={prevHandler}\n        >\n          <SVG.LeftChevron />\n        </SC.Button>\n        <SC.Button onClick={nextHandler}>\n          <SVG.RightChevron />\n        </SC.Button>\n      </SC.ButtonGroup>\n    </SC.PeriodPaginatorWrapper>\n  );\n};\nexport default PeriodPaginator;\n\nPeriodPaginator.propTypes = {\n  date: PropTypes.string.isRequired,\n  prevHandler: PropTypes.func.isRequired,\n  nextHandler: PropTypes.func.isRequired,\n};\n","import { css, styled } from 'styled-components';\n\nconst sharedStyle = css`\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  position: relative;\n  outline: 0px;\n  border: 0px;\n  cursor: pointer;\n  user-select: none;\n  vertical-align: middle;\n  appearance: none;\n  text-decoration: none;\n  font-family: 'Inter Medium';\n  font-size: 16px;\n  line-height: 1.13;\n  min-width: 82px;\n  padding: 8px 16px;\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  color: inherit;\n  background-color: #e3f3ff;\n  &.active {\n    background-color: #cae8ff;\n  }\n  &:hover,\n  &:focus {\n    background-color: #cae8ff;\n  }\n`;\n\nexport const ButtonGroup = styled.div`\n  display: inline-flex;\n  color: #3e85f3;\n  border-radius: 8px;\n`;\n\nexport const Button = styled.button`\n  &:first-child {\n    border-top-left-radius: 8px;\n    border-bottom-left-radius: 8px;\n    border-right: 1px solid rgba(62, 133, 243, 0.2);\n  }\n  &:last-child {\n    border-top-right-radius: 8px;\n    border-bottom-right-radius: 8px;\n  }\n  ${sharedStyle};\n`;\n","import { useNavigate } from 'react-router';\nimport { Button, ButtonGroup } from './PeriodTypeSelect.styled';\nimport { format } from 'date-fns';\nimport { useState } from 'react';\n\nconst PeriodTypeSelect = () => {\n  const [switcher, setSwitcher] = useState('month');\n  const navigate = useNavigate();\n\n  const btnHandler = e => {\n    const newSwitcher = e.target.getAttribute('data-type');\n    setSwitcher(newSwitcher);\n    const formattedCurrentDay =\n      newSwitcher === 'day'\n        ? format(new Date(), 'yyyy-MM-dd')\n        : format(new Date(), 'yyyy-MM').toLowerCase();\n\n    navigate(`/calendar/${newSwitcher}/${formattedCurrentDay}`);\n  };\n\n  return (\n    <ButtonGroup>\n      <Button\n        className={switcher === 'month' ? 'active' : null}\n        type=\"button\"\n        onClick={btnHandler}\n        data-type=\"month\"\n      >\n        Month\n      </Button>\n      <Button\n        className={switcher === 'day' ? 'active' : null}\n        type=\"button\"\n        onClick={btnHandler}\n        data-type=\"day\"\n      >\n        Day\n      </Button>\n    </ButtonGroup>\n  );\n};\n\nexport default PeriodTypeSelect;\n","import { styled } from 'styled-components';\n\nexport const CalendarToolbarWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  flex-direction: column;\n  margin-bottom: 24px;\n  @media screen and (min-width: 768px) {\n    flex-direction: inherit;\n    margin-bottom: 32px;\n  }\n`;\n\nexport const DaysOfWeekWrapper = styled.div`\n  display: flex;\n  justify-content: space-around;\n  border-radius: 8px;\n  border: 1px solid rgba(220, 227, 229, 0.5);\n  background-color: #fff;\n`;\n","import { useEffect } from 'react';\nimport PeriodPaginator from './PeriodPaginator/PeriodPaginator';\nimport PeriodTypeSelect from './PeriodTypeSelect/PeriodTypeSelect';\nimport * as SC from './CalendarToolbar.styled';\nimport { format, addDays, parse } from 'date-fns';\nimport { useNavigate, useParams } from 'react-router';\nimport { useDispatch } from 'react-redux';\nimport { getAllTasks } from 'redux/tasks/operations';\nimport { useCalendar } from 'pages/CalendarPage/CalendarProvider';\n\nconst CalendarToolbar = () => {\n  const { currentDay } = useParams();\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n\n  const { currentDate, setCurrentDate } = useCalendar();\n  useEffect(() => {\n    const initialDate = currentDay\n      ? parse(currentDay, 'yyyy-MM-dd', new Date())\n      : new Date();\n    setCurrentDate(initialDate);\n  }, [setCurrentDate, currentDay]);\n\n  const year = currentDate.getFullYear();\n  const month = currentDate.getMonth();\n  const formattedMonth = String(month + 1).padStart(2, '0');\n\n  useEffect(() => {\n    dispatch(getAllTasks({ year, month: formattedMonth }));\n  }, [dispatch, year, formattedMonth]);\n\n  const formatedDate = currentDay\n    ? format(currentDate, 'dd MMMM yyyy')\n    : format(currentDate, 'MMMM yyyy');\n\n  const prevHandleMonth = () => {\n    const prevDate = new Date(\n      currentDate.getFullYear(),\n      currentDate.getMonth() - 1\n    );\n    setCurrentDate(prevDate);\n    navigate(`/calendar/month/${format(prevDate, 'yyyy-MM')}`);\n  };\n\n  const prevHandleDay = () => {\n    const prevDate = addDays(currentDate, -1);\n    setCurrentDate(prevDate);\n    navigate(`/calendar/day/${format(prevDate, 'yyyy-MM-dd')}`);\n  };\n\n  const nextHandleMonth = () => {\n    const nextDate = new Date(\n      currentDate.getFullYear(),\n      currentDate.getMonth() + 1\n    );\n    setCurrentDate(nextDate);\n    navigate(`/calendar/month/${format(nextDate, 'yyyy-MM')}`);\n  };\n\n  const nextHandleDay = () => {\n    const nextDate = addDays(currentDate, 1);\n    setCurrentDate(nextDate);\n    navigate(`/calendar/day/${format(nextDate, 'yyyy-MM-dd')}`);\n  };\n  const prevHandler = () => {\n    currentDay ? prevHandleDay() : prevHandleMonth();\n  };\n  const nextHandler = () => {\n    currentDay ? nextHandleDay() : nextHandleMonth();\n  };\n\n  return (\n    <>\n      <SC.CalendarToolbarWrapper>\n        <PeriodPaginator\n          date={formatedDate}\n          prevHandler={prevHandler}\n          nextHandler={nextHandler}\n        />\n        <PeriodTypeSelect />\n      </SC.CalendarToolbarWrapper>\n    </>\n  );\n};\n\nexport default CalendarToolbar;\n","import CalendarToolbar from 'components/CalendarToolbar/CalendarToolbar';\nimport { Loader } from 'components/Loader/Loader';\nimport { Suspense } from 'react';\nimport { Outlet } from 'react-router';\n\nconst CalendarPage = () => {\n  return (\n    <>\n      <CalendarToolbar />\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default CalendarPage;\n"],"names":["_require","require","css","styled","sharedStyle","_templateObject","_taggedTemplateLiteral","PeriodPaginatorWrapper","div","_templateObject2","PeriodPaginatorDisplay","_templateObject3","ButtonGroup","_templateObject4","Button","button","_templateObject5","_ref","date","prevHandler","nextHandler","createdAt","useSelector","selectUser","_jsxs","SC","children","_jsx","disabled","parseISO","parse","Date","onClick","SVG","_useState","useState","_useState2","_slicedToArray","switcher","setSwitcher","navigate","useNavigate","btnHandler","e","newSwitcher","target","getAttribute","formattedCurrentDay","format","toLowerCase","concat","className","type","CalendarToolbarWrapper","currentDay","useParams","dispatch","useDispatch","_useCalendar","useCalendar","currentDate","setCurrentDate","useEffect","initialDate","year","getFullYear","month","getMonth","formattedMonth","String","padStart","getAllTasks","formatedDate","_Fragment","PeriodPaginator","prevDate","addDays","prevHandleDay","prevHandleMonth","nextDate","nextHandleDay","nextHandleMonth","PeriodTypeSelect","CalendarToolbar","Suspense","fallback","Loader","Outlet"],"sourceRoot":""}