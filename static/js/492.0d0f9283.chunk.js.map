{"version":3,"file":"static/js/492.0d0f9283.chunk.js","mappings":"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","sources":["components/authNavigate/AuthNavigate.styled.jsx","components/authNavigate/AuthNavigate.jsx","components/registerLoginForm/RegisterLoginForm.styled.jsx","components/registerLoginForm/RegisterForm.jsx","pages/RegisterPage/RegisterPage.styled.jsx","pages/RegisterPage/RegisterPage.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const StyledNavigate = styled(NavLink)`\n    color: #3E85F3;\n    text-shadow: 0px 9.399999618530273px 57.6875px rgba(0, 0, 0, 0.04), 0px 47px 355px rgba(0, 0, 0, 0.07);\n    font-family: Inter SemiBold;\n    font-size: 12px;\n    line-height: 1.16;\n    text-decoration-line: underline;\n    margin: 0 auto;\n    cursor: pointer;\n    display: block;\n    text-align: center;\n    margin-top: 18px;\n    transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    &:hover, &:focus {\n        color: #2b78ef;\n        text-decoration-line: none;\n    }\n    @media (min-width: 768px) {\n    font-size: 18px;\n    line-height: 1.33;\n    margin-top: 24px;\n    }\n`;\n","import PropTypes from 'prop-types';\nimport { StyledNavigate } from './AuthNavigate.styled';\n\n\nexport const AuthNavigate = ({ path, text }) => {\n    return <StyledNavigate to={path}>{text}</StyledNavigate>\n}\n\nAuthNavigate.propTypes = {\n    path: PropTypes.string.isRequired,\n    text: PropTypes.string.isRequired,\n};\n","import styled, { css } from 'styled-components';\nimport { Form, Field } from 'formik';\n\nexport const StyledContainer = styled.div`\n  display: flex;\n  margin: 0 auto;\n  box-sizing: border-box;\n  width: (100%-40px);\n  padding: 40px 15px;\n  flex-direction: column;\n  justify-content: center;\n  align-items: flex-start;\n  gap: 32px;\n  border-radius: 8px;\n  background: #fff;\n  @media (min-width: 375px) {\n    width: 335px;\n    padding: 40px 24px;\n  }\n  @media (min-width: 768px) {\n    width: 480px;\n    padding: 40px;\n    gap: 40px;\n  }\n`;\n\nexport const StyledHeader = styled.h1`\n  color: #3e85f3;\n  text-shadow: 0px 9.399999618530273px 57.6875px rgba(0, 0, 0, 0.04),\n    0px 47px 355px rgba(0, 0, 0, 0.07);\n  font-family: Inter SemiBold;\n  font-size: 18px;\n  line-height: 1.3;\n  margin: 0;\n  @media (min-width: 768px) {\n    font-size: 24px;\n    line-height: 1;\n  }\n`;\n\nexport const StyledFormDiv = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  width: 100%;\n  gap: 8px;\n`;\n\nexport const StyledForm = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  gap: 24px;\n  width: 100%;\n  @media (min-width: 768px) {\n    gap: 18px;\n  }\n`;\n\nexport const Styledlabel = styled.label`\n  ${props => {\n    switch (props.$validate) {\n      case 'error':\n        return css`\n          color: rgba(231, 74, 59, 1);\n        `;\n      case 'empty':\n        return css`\n          color: #3e85f3;\n        `;\n      case 'okay':\n        return css`\n          color: rgba(60, 188, 129, 1);\n        `;\n      default:\n        return css`\n          color: #111;\n        `;\n    }\n  }}\n  font-family: Inter SemiBold;\n  font-size: 12px;\n  @media (min-width: 768px) {\n    font-size: 14px;\n  }\n`;\n\nexport const StyledField = styled(Field)`\n  ${props => {\n    switch (props.$validate) {\n      case 'error':\n        return css`\n          border: 1px solid rgba(231, 74, 59, 1);\n        `;\n      case 'okay':\n        return css`\n          border: 1px solid rgba(60, 188, 129, 1);\n        `;\n      case 'empty':\n        return css`\n          border: 1px solid #3e85f3;\n        `;\n      default:\n        return css`\n          border: 1px solid rgba(220, 227, 229, 0.6);\n        `;\n    }\n  }}\n  width: 100%;\n  height: 46px;\n  border-radius: 8px;\n  box-sizing: border-box;\n  background: #fff;\n  padding: 14px;\n  color: #111;\n  font-family: Inter, sans-serif;\n  font-size: 14px;\n  font-style: normal;\n  line-height: 1.3;\n  transition: border 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover,\n  &:focus {\n    border: 1px solid #111;\n  }\n  &::placeholder {\n    color: #dce3e5;\n    font-family: Inter Regular;\n    font-size: 14px;\n    line-height: 1.28;\n  }\n  @media (min-width: 768px) {\n    font-size: 16px;\n    line-height: 1.13;\n    height: 54px;\n    &::placeholder {\n    font-size: 16px;\n  }\n  }\n`;\n\nexport const StyledFieldPassword = styled(Field)`\n  font-family: Inter Regular;\n  font-size: 14px;\n  border: none;\n  outline:none;\n  width: 86%;\n  &::placeholder {\n    color: #DCE3E5;\n  }\n  @media (min-width: 768px) {\n    font-size: 16px;\n  }\n`\n\nexport const StyledContainerPassword = styled.div`\n  ${props => {\n    switch (props.$validate) {\n      case 'error':\n        return css`\n          border: 1px solid rgba(231, 74, 59, 1);\n        `;\n      case 'okay':\n        return css`\n          border: 1px solid rgba(60, 188, 129, 1);\n        `;\n      case 'empty':\n        return css`\n          border: 1px solid #3e85f3;\n        `;\n      default:\n        return css`\n          border: 1px solid rgba(220, 227, 229, 0.6);\n        `;\n    }\n  }}\n  width: 100%;\n  height: 46px;\n  border-radius: 8px;\n  box-sizing: border-box;\n  background: #fff;\n  padding: 14px;\n  color: #111;\n  align-items: center;\n  position: relative;\n  font-family: Inter, sans-serif;\n  font-size: 14px;\n  font-style: normal;\n  line-height: 1.3;\n  display: flex;\n  transition: border 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover,\n  &:focus {\n    border: 1px solid #111;\n  }\n  &::placeholder {\n    color: #dce3e5;\n    font-family: Inter Regular;\n    font-size: 14px;\n    line-height: 1.28;\n  }\n  @media (min-width: 768px) {\n    font-size: 16px;\n    line-height: 1.13;\n    height: 54px;\n  }\n`\n\nexport const StyledButtonVisibility = styled.button`\n  border: none;\n  background: transparent;\n  cursor: pointer;\n  position: absolute;\n  padding: 0px;\n  padding-top: 3.3px;\n  right: 14px;\n`\n\nexport const StyledFieldPasswordLogin = styled(StyledFieldPassword)`\n  &::placeholder {\n    font-family: Inter Bold;\n    font-weight: 900;\n    letter-spacing: 6px;\n    line-height: 1.28;\n  }\n`\n\nexport const StyledRequired = styled.div`\n  color: #3e85f3;\n  font-family: Inter Regular;\n  font-size: 12px;\n  line-height: 1.16;\n  margin-left: 14px;\n  @media (min-width: 768px) {\n    font-size: 14px;\n    line-height: 1.3;\n  }\n`;\n\nexport const StyledCorrect = styled.div`\n  color: #3CBC81;\nfont-family: Inter Regular;\nfont-size: 12px;\nline-height: 1.17; \nmargin-left: 14px;\n@media (min-width: 768px) {\n    font-size: 14px;\n    line-height: 1.3;\n  }\n`\n\nexport const StyledError = styled(StyledRequired)`\n  color: rgba(231, 74, 59, 1);\n  margin-left: 14px;\n`;\n\nexport const StyledButton = styled.button`\n  display: flex;\n  width: 100%;\n  padding: 14px;\n  align-items: center;\n  gap: 10px;\n  border-radius: 16px;\n  border: none;\n  cursor: pointer;\n  background: #3e85f3;\n  box-shadow: 4px 2px 16px 0px rgba(136, 165, 191, 0.48);\n  color: #fff;\n  font-family: Inter SemiBold;\n  font-size: 14px;\n  line-height: 1.28;\n  letter-spacing: -0.28px;\n  margin-top: 12px;\n  justify-content: center;\n  transition: background 250ms cubic-bezier(0.4, 0, 0.2, 1),\n  box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover,\n  &:focus {\n    background: #2b78ef;\n    box-shadow: 4px 2px 16px 0px rgba(136, 165, 191, 0.48);\n  }\n  @media (min-width: 768px) {\n    margin-top: 30px;\n    font-size: 18px;\n    letter-spacing: -0.36px;\n    line-height: 1.33;\n  }\n`;","import React from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { useState } from 'react';\nimport {\n    StyledButton,\n    StyledButtonVisibility,\n    StyledContainer,\n    StyledContainerPassword,\n    StyledCorrect,\n    StyledError,\n    StyledField,\n    StyledFieldPassword,\n    StyledForm,\n    StyledFormDiv,\n    StyledHeader,\n    Styledlabel,\n    StyledRequired,\n} from './RegisterLoginForm.styled';\nimport { register } from 'redux/auth/operations';\nimport { Visibility, VisibilityOff } from '@mui/icons-material';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport { SVG } from 'images';\nimport { Loader } from 'components/Loader/Loader';\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: '#8D9698'\n    }\n  },\n});\n\nconst SignupSchema = Yup.object().shape({\n  name: Yup.string()\n    .min(3, 'Too Short!')\n    .max(20, 'Too Long!')\n    .required('Please enter your name'),\n  email: Yup.string()\n    .email('This is an ERROR email')\n    .required('Please enter your email')\n    .matches(/^[a-z0-9.]+@[a-z]+\\.[a-z]{2,3}$/),\n  password: Yup.string()\n    .min(8, 'Need to be more than 8 symbols!')\n    .required('Please enter your password')\n    .matches(/^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{8,30}$/),\n});\n\nconst RegisterForm = () => {\n    const navigate = useNavigate();\n    const dispatch = useDispatch();\n    const [usedEmail, setUsedEmail] = useState(false);\n    const [visibility, setVisibility] = useState(false);\n    const [isLoading, setIsLoading] = useState(false);\n\n    return (<StyledContainer>\n        <StyledHeader>Sign Up</StyledHeader>\n        <Formik\n            initialValues={{\n                name: '',\n                email: '',\n                password: '',\n            }}\n            validateOnChange={false}\n            validateOnBlur={true}\n            validationSchema={SignupSchema}\n            onSubmit={async (values, { resetForm }) => {\n                try {\n                    setIsLoading(true);\n                    const response = await dispatch(\n                        register({\n                            name: values.name,\n                            email: values.email,\n                            password: values.password,\n                        }));\n                    if (response.meta.requestStatus !== \"rejected\") {\n                        resetForm();\n                        navigate(\"/calendar\");\n                    } else {\n                        if (response.payload.includes(\"409\")) {\n                            setUsedEmail(true);\n                        }\n                    }\n                    setIsLoading(false);\n                } catch (error) {\n                    setIsLoading(false);\n                    alert(\"Sorry, problem at server\");\n                }\n        \n            }}\n        >\n            {({ errors, touched }) => {\n                if (isLoading) {\n                    return <Loader />\n                } else {\n                    return (\n                        <StyledForm>\n                            <StyledFormDiv>\n                                <Styledlabel\n                                    htmlFor=\"name\"\n                                    $validate={\n                                        (errors.name === 'Please enter your name' &&\n                                            touched.name &&\n                                            'empty') ||\n                                        (errors.name && touched.name && 'error') ||\n                                        (touched.name && 'okay')\n                                    }\n                                >\n                                    Name\n                                </Styledlabel>\n                                <StyledField\n                                    name=\"name\"\n                                    placeholder=\"Enter your name\"\n                                    $validate={\n                                        (errors.name === 'Please enter your name' &&\n                                            touched.name &&\n                                            'empty') ||\n                                        (errors.name && touched.name && 'error') ||\n                                        (touched.name && 'okay')\n                                    }\n                                />\n                                {(errors.name === 'Please enter your name' && touched.name && (\n                                    <StyledRequired>{errors.name}</StyledRequired>\n                                )) ||\n                                    (errors.name && touched.name && (\n                                        <StyledError>{errors.name}</StyledError>\n                                    )) || (touched.name &&\n                                        <StyledCorrect>This is an CORRECT name</StyledCorrect>)}\n                            </StyledFormDiv>\n                            <StyledFormDiv>\n                                <Styledlabel\n                                    htmlFor=\"email\"\n                                    $validate={\n                                        (errors.email === 'Please enter your email' &&\n                                            touched.email &&\n                                            'empty') ||\n                                        (((errors.email && (errors.email === \"This is an ERROR email\" || errors.email.includes(\"match\"))) || usedEmail) && 'error') ||\n                                        (touched.email && 'okay')\n                                    }\n                                >\n                                    Email\n                                </Styledlabel>\n                                <StyledField\n                                    name=\"email\"\n                                    type=\"email\"\n                                    placeholder=\"Enter email\"\n                                    $validate={\n                                        (errors.email === 'Please enter your email' &&\n                                            touched.email &&\n                                            'empty') ||\n                                        (((errors.email && (errors.email === \"This is an ERROR email\" || errors.email.includes(\"match\"))) || usedEmail) && 'error') ||\n                                        (touched.email && 'okay')\n                                    }\n                                />\n                                {(errors.email === 'Please enter your email' && touched.email && (\n                                    <StyledRequired>{errors.email}</StyledRequired>\n                                )) ||\n                                    (errors.email && (errors.email === \"This is an ERROR email\" || errors.email.includes(\"match\")) && (\n                                        <StyledError>This is an ERROR email</StyledError>\n                                    )) ||\n                                    (usedEmail && (\n                                        <StyledError>This user is already exist</StyledError>\n                                    )) || (touched.email &&\n                                        <StyledCorrect>This is an CORRECT email</StyledCorrect>)}\n                            </StyledFormDiv>\n                            <StyledFormDiv >\n                                <Styledlabel\n                                    htmlFor=\"password\"\n                                    $validate={\n                                        (errors.password === 'Please enter your password' &&\n                                            touched.password &&\n                                            'empty') ||\n                                        (errors.password && touched.password && 'error') ||\n                                        (touched.password && 'okay')\n                                    }\n                                >\n                                    Password\n                                </Styledlabel>\n                                <StyledContainerPassword $validate={\n                                    (errors.password === 'Please enter your password' &&\n                                        touched.password &&\n                                        'empty') ||\n                                    (errors.password && touched.password && 'error') ||\n                                    (touched.password && 'okay')\n                                }>\n                                    <StyledFieldPassword\n                                        name=\"password\"\n                                        type={!visibility ? \"password\" : \"text\"}\n                                        placeholder=\"Enter password\"\n                                    />\n                                    <StyledButtonVisibility type=\"button\" onClick={() => { setVisibility(!visibility) }}>\n                                        <ThemeProvider theme={theme}>\n                                            {!visibility ? <Visibility color=\"primary\" /> : <VisibilityOff color=\"primary\" />}\n                                        </ThemeProvider>\n                                    </StyledButtonVisibility>\n                                </StyledContainerPassword>\n                                {(errors.password === 'Please enter your password' &&\n                                    touched.password && (\n                                        <StyledRequired>{errors.password}</StyledRequired>\n                                    )) ||\n                                    (errors.password && errors.password.includes('password must match the following') && touched.password && (\n                                        <StyledError>This password should contain  at least eight characters and at least one number and one letter</StyledError>\n                                    )) ||\n                                    (errors.password && touched.password && (\n                                        <StyledError>{errors.password}</StyledError>\n                                    )) || (touched.password &&\n                                        <StyledCorrect>This is an CORRECT password</StyledCorrect>)\n                                }\n                            </StyledFormDiv>\n                            <StyledButton type=\"submit\">Sign Up\n                                <SVG.LoginWhiteIcon />\n                            </StyledButton>\n                        </StyledForm>\n                    );\n                }\n            }\n            }</Formik>\n    </StyledContainer>)\n}\n\n\nexport default RegisterForm;","import styled from 'styled-components';\n\nexport const StyledLayout = styled.div`\n  margin: 0 auto;\n  width: 100%;\n  padding: 155px 15px 156px 15px;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  background: #dcebf7;\n  @media (min-width: 768px) {\n    padding-top: 227px;\n  }\n  @media (min-width: 1440px) {\n    padding-top: 124px;\n  }\n`;\n","\nimport { AuthNavigate } from 'components/authNavigate/AuthNavigate';\nimport RegisterForm from 'components/registerLoginForm/RegisterForm';\nimport { StyledLayout } from './RegisterPage.styled';\n\n\nconst RegisterPage = () => {\n  return (\n    <StyledLayout>\n      <RegisterForm />\n      <AuthNavigate path=\"/login\" text=\"Log In\"/>\n    </StyledLayout>\n  );\n};\n\nexport default RegisterPage;\n"],"names":["StyledNavigate","styled","NavLink","_templateObject","_taggedTemplateLiteral","AuthNavigate","_ref","path","text","_jsx","to","children","StyledContainer","StyledHeader","_templateObject2","StyledFormDiv","_templateObject3","StyledForm","Form","_templateObject4","Styledlabel","_templateObject5","props","$validate","css","_templateObject6","_templateObject7","_templateObject8","_templateObject9","StyledField","Field","_templateObject10","_templateObject11","_templateObject12","_templateObject13","_templateObject14","StyledFieldPassword","_templateObject15","StyledContainerPassword","_templateObject16","_templateObject17","_templateObject18","_templateObject19","_templateObject20","StyledButtonVisibility","_templateObject21","StyledRequired","_templateObject22","_templateObject23","StyledCorrect","_templateObject24","StyledError","_templateObject25","StyledButton","_templateObject26","theme","createTheme","palette","primary","main","SignupSchema","Yup","shape","name","min","max","required","email","matches","password","navigate","useNavigate","dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","usedEmail","setUsedEmail","_useState3","_useState4","visibility","setVisibility","_useState5","_useState6","isLoading","setIsLoading","_jsxs","Formik","initialValues","validateOnChange","validateOnBlur","validationSchema","onSubmit","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","values","resetForm","response","wrap","_context","prev","next","register","sent","meta","requestStatus","payload","includes","t0","alert","stop","_x","_x2","apply","arguments","_ref3","errors","touched","Loader","htmlFor","placeholder","type","onClick","ThemeProvider","VisibilityOff","color","Visibility","SVG","StyledLayout","RegisterForm"],"sourceRoot":""}