{"version":3,"file":"static/js/82.70ae4607.chunk.js","mappings":"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","sources":["components/authNavigate/AuthNavigate.styled.jsx","components/authNavigate/AuthNavigate.jsx","components/registerLoginForm/RegisterLoginForm.styled.jsx","components/registerLoginForm/LoginForm.jsx","pages/LoginPage/LoginPage.styled.jsx","pages/LoginPage/LoginPage.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const StyledNavigate = styled(NavLink)`\n    color: #3E85F3;\n    text-shadow: 0px 9.399999618530273px 57.6875px rgba(0, 0, 0, 0.04), 0px 47px 355px rgba(0, 0, 0, 0.07);\n    font-family: Inter SemiBold;\n    font-size: 12px;\n    line-height: 1.16;\n    text-decoration-line: underline;\n    margin: 0 auto;\n    cursor: pointer;\n    display: block;\n    text-align: center;\n    margin-top: 18px;\n    transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    &:hover, &:focus {\n        color: #2b78ef;\n        text-decoration-line: none;\n    }\n    @media (min-width: 768px) {\n    font-size: 18px;\n    line-height: 1.33;\n    margin-top: 24px;\n    }\n`;\n","import PropTypes from 'prop-types';\nimport { StyledNavigate } from './AuthNavigate.styled';\n\n\nexport const AuthNavigate = ({ path, text }) => {\n    return <StyledNavigate to={path}>{text}</StyledNavigate>\n}\n\nAuthNavigate.propTypes = {\n    path: PropTypes.string.isRequired,\n    text: PropTypes.string.isRequired,\n};\n","import styled, { css } from 'styled-components';\nimport { Form, Field } from 'formik';\n\nexport const StyledContainer = styled.div`\n  display: flex;\n  margin: 0 auto;\n  box-sizing: border-box;\n  width: (100%-40px);\n  padding: 40px 15px;\n  flex-direction: column;\n  justify-content: center;\n  align-items: flex-start;\n  gap: 32px;\n  border-radius: 8px;\n  background: #fff;\n  @media (min-width: 375px) {\n    width: 335px;\n    padding: 40px 24px;\n  }\n  @media (min-width: 768px) {\n    width: 480px;\n    padding: 40px;\n    gap: 40px;\n  }\n`;\n\nexport const StyledHeader = styled.h1`\n  color: #3e85f3;\n  text-shadow: 0px 9.399999618530273px 57.6875px rgba(0, 0, 0, 0.04),\n    0px 47px 355px rgba(0, 0, 0, 0.07);\n  font-family: Inter SemiBold;\n  font-size: 18px;\n  line-height: 1.3;\n  margin: 0;\n  @media (min-width: 768px) {\n    font-size: 24px;\n    line-height: 1;\n  }\n`;\n\nexport const StyledFormDiv = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  width: 100%;\n  gap: 8px;\n`;\n\nexport const StyledForm = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  gap: 24px;\n  width: 100%;\n  @media (min-width: 768px) {\n    gap: 18px;\n  }\n`;\n\nexport const Styledlabel = styled.label`\n  ${props => {\n    switch (props.$validate) {\n      case 'error':\n        return css`\n          color: rgba(231, 74, 59, 1);\n        `;\n      case 'empty':\n        return css`\n          color: #3e85f3;\n        `;\n      case 'okay':\n        return css`\n          color: rgba(60, 188, 129, 1);\n        `;\n      default:\n        return css`\n          color: #111;\n        `;\n    }\n  }}\n  font-family: Inter SemiBold;\n  font-size: 12px;\n  @media (min-width: 768px) {\n    font-size: 14px;\n  }\n`;\n\nexport const StyledField = styled(Field)`\n  ${props => {\n    switch (props.$validate) {\n      case 'error':\n        return css`\n          border: 1px solid rgba(231, 74, 59, 1);\n        `;\n      case 'okay':\n        return css`\n          border: 1px solid rgba(60, 188, 129, 1);\n        `;\n      case 'empty':\n        return css`\n          border: 1px solid #3e85f3;\n        `;\n      default:\n        return css`\n          border: 1px solid rgba(220, 227, 229, 0.6);\n        `;\n    }\n  }}\n  width: 100%;\n  height: 46px;\n  border-radius: 8px;\n  box-sizing: border-box;\n  background: #fff;\n  padding: 14px;\n  color: #111;\n  font-family: Inter, sans-serif;\n  font-size: 14px;\n  font-style: normal;\n  line-height: 1.3;\n  transition: border 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover,\n  &:focus {\n    border: 1px solid #111;\n  }\n  &::placeholder {\n    color: #dce3e5;\n    font-family: Inter Regular;\n    font-size: 14px;\n    line-height: 1.28;\n  }\n  @media (min-width: 768px) {\n    font-size: 16px;\n    line-height: 1.13;\n    height: 54px;\n    &::placeholder {\n    font-size: 16px;\n  }\n  }\n`;\n\nexport const StyledFieldPassword = styled(Field)`\n  font-family: Inter Regular;\n  font-size: 14px;\n  border: none;\n  outline:none;\n  width: 86%;\n  &::placeholder {\n    color: #DCE3E5;\n  }\n  @media (min-width: 768px) {\n    font-size: 16px;\n  }\n`\n\nexport const StyledContainerPassword = styled.div`\n  ${props => {\n    switch (props.$validate) {\n      case 'error':\n        return css`\n          border: 1px solid rgba(231, 74, 59, 1);\n        `;\n      case 'okay':\n        return css`\n          border: 1px solid rgba(60, 188, 129, 1);\n        `;\n      case 'empty':\n        return css`\n          border: 1px solid #3e85f3;\n        `;\n      default:\n        return css`\n          border: 1px solid rgba(220, 227, 229, 0.6);\n        `;\n    }\n  }}\n  width: 100%;\n  height: 46px;\n  border-radius: 8px;\n  box-sizing: border-box;\n  background: #fff;\n  padding: 14px;\n  color: #111;\n  align-items: center;\n  position: relative;\n  font-family: Inter, sans-serif;\n  font-size: 14px;\n  font-style: normal;\n  line-height: 1.3;\n  display: flex;\n  transition: border 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover,\n  &:focus {\n    border: 1px solid #111;\n  }\n  &::placeholder {\n    color: #dce3e5;\n    font-family: Inter Regular;\n    font-size: 14px;\n    line-height: 1.28;\n  }\n  @media (min-width: 768px) {\n    font-size: 16px;\n    line-height: 1.13;\n    height: 54px;\n  }\n`\n\nexport const StyledButtonVisibility = styled.button`\n  border: none;\n  background: transparent;\n  cursor: pointer;\n  position: absolute;\n  padding: 0px;\n  padding-top: 3.3px;\n  right: 14px;\n`\n\nexport const StyledFieldPasswordLogin = styled(StyledFieldPassword)`\n  &::placeholder {\n    font-family: Inter Bold;\n    font-weight: 900;\n    letter-spacing: 6px;\n    line-height: 1.28;\n  }\n`\n\nexport const StyledRequired = styled.div`\n  color: #3e85f3;\n  font-family: Inter Regular;\n  font-size: 12px;\n  line-height: 1.16;\n  margin-left: 14px;\n  @media (min-width: 768px) {\n    font-size: 14px;\n    line-height: 1.3;\n  }\n`;\n\nexport const StyledCorrect = styled.div`\n  color: #3CBC81;\nfont-family: Inter Regular;\nfont-size: 12px;\nline-height: 1.17; \nmargin-left: 14px;\n@media (min-width: 768px) {\n    font-size: 14px;\n    line-height: 1.3;\n  }\n`\n\nexport const StyledError = styled(StyledRequired)`\n  color: rgba(231, 74, 59, 1);\n  margin-left: 14px;\n`;\n\nexport const StyledButton = styled.button`\n  display: flex;\n  width: 100%;\n  padding: 14px;\n  align-items: center;\n  gap: 10px;\n  border-radius: 16px;\n  border: none;\n  cursor: pointer;\n  background: #3e85f3;\n  box-shadow: 4px 2px 16px 0px rgba(136, 165, 191, 0.48);\n  color: #fff;\n  font-family: Inter SemiBold;\n  font-size: 14px;\n  line-height: 1.28;\n  letter-spacing: -0.28px;\n  margin-top: 12px;\n  justify-content: center;\n  transition: background 250ms cubic-bezier(0.4, 0, 0.2, 1),\n  box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover,\n  &:focus {\n    background: #2b78ef;\n    box-shadow: 4px 2px 16px 0px rgba(136, 165, 191, 0.48);\n  }\n  @media (min-width: 768px) {\n    margin-top: 30px;\n    font-size: 18px;\n    letter-spacing: -0.36px;\n    line-height: 1.33;\n  }\n`;","import React from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { useState } from 'react';\nimport {\n  StyledButton,\n  StyledButtonVisibility,\n  StyledContainer,\n  StyledContainerPassword,\n  StyledCorrect,\n  StyledError,\n  StyledField,\n  StyledFieldPassword,\n  StyledForm,\n  StyledFormDiv,\n  StyledHeader,\n  Styledlabel,\n  StyledRequired,\n} from './RegisterLoginForm.styled';\nimport { login } from 'redux/auth/operations';\nimport { Visibility, VisibilityOff } from '@mui/icons-material';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport { SVG } from 'images';\nimport { Loader } from 'components/Loader/Loader';\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: '#8D9698'\n    }\n  },\n});\n\nconst LoginSchema = Yup.object().shape({\n  email: Yup.string()\n    .email('This is an ERROR email')\n    .required('Please enter your email')\n    .matches(/^[a-z0-9.]+@[a-z]+\\.[a-z]{2,3}$/),\n  password: Yup.string()\n    .min(8, 'Need to be more than 8 symbols!')\n    .required('Please enter your password')\n    .matches(/^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{8,30}$/),\n});\n\nconst LoginForm = () => {\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const [noUser, setNoUser] = useState(false);\n  const [visibility, setVisibility] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  return (\n    <StyledContainer>\n      <StyledHeader>Log In</StyledHeader>\n      <Formik\n        initialValues={{\n          email: '',\n          password: '',\n        }}\n        validateOnChange={false}\n        validateOnBlur={true}\n        validationSchema={LoginSchema}\n        onSubmit={async (values, { resetForm }) => {\n          try {\n            setIsLoading(true);\n            const response = await dispatch(\n              login({\n                email: values.email,\n                password: values.password,\n              })\n            );\n            if (response.meta.requestStatus !== 'rejected') {\n              resetForm();\n              navigate('/calendar/month/:currentDate');\n            } else {\n              if (response.payload.includes('401')) {\n                setNoUser(true);\n              }\n            }\n            setIsLoading(false);\n          } catch (error) {\n            setIsLoading(false);\n            alert('Sorry, problem at server');\n          }\n        }}\n      >\n        {({ errors, touched }) => {\n          if (isLoading) {\n            return <Loader />\n          } else {\n            return (\n              <StyledForm>\n                <StyledFormDiv>\n                  <Styledlabel\n                    htmlFor=\"email\"\n                    $validate={\n                      (errors.email === 'Please enter your email' &&\n                        touched.email &&\n                        'empty') ||\n                      (((errors.email &&\n                        (errors.email === 'This is an ERROR email' ||\n                          errors.email.includes('match'))) ||\n                        noUser) &&\n                        'error') ||\n                      (touched.email && 'okay')\n                    }\n                  >\n                    Email\n                  </Styledlabel>\n                  <StyledField\n                    name=\"email\"\n                    type=\"email\"\n                    placeholder=\"nadiia@gmail.com\"\n                    $validate={\n                      (errors.email === 'Please enter your email' &&\n                        touched.email &&\n                        'empty') ||\n                      (((errors.email &&\n                        (errors.email === 'This is an ERROR email' ||\n                          errors.email.includes('match'))) ||\n                        noUser) &&\n                        'error') ||\n                      (touched.email && 'okay')\n                    }\n                  />\n                  {(errors.email === 'Please enter your email' &&\n                    touched.email && (\n                      <StyledRequired>{errors.email}</StyledRequired>\n                    )) ||\n                    (errors.email &&\n                      (errors.email === 'This is an ERROR email' ||\n                        errors.email.includes('match')) && (\n                        <StyledError>This is an ERROR email</StyledError>\n                      )) ||\n                    (noUser && (\n                      <StyledError>Email or password is uncorrect</StyledError>\n                    )) || (touched.email &&\n                      <StyledCorrect>This is an CORRECT email</StyledCorrect>)}\n                </StyledFormDiv>\n                <StyledFormDiv>\n                  <Styledlabel\n                    htmlFor=\"password\"\n                    $validate={\n                      (errors.password === 'Please enter your password' &&\n                        touched.password &&\n                        'empty') ||\n                      (((errors.password && touched.password) || noUser) &&\n                        'error') ||\n                      (touched.password && 'okay')\n                    }\n                  >\n                    Password\n                  </Styledlabel>\n                  <StyledContainerPassword $validate={\n                    (errors.password === 'Please enter your password' &&\n                      touched.password &&\n                      'empty') ||\n                    (errors.password && touched.password && 'error') ||\n                    (touched.password && 'okay')\n                  }>\n                    <StyledFieldPassword\n                      name=\"password\"\n                      type={!visibility ? \"password\" : \"text\"}\n                      placeholder=\"• • • • • • •\"\n                    />\n                    <StyledButtonVisibility type=\"button\" onClick={() => { setVisibility(!visibility) }}>\n                      <ThemeProvider theme={theme}>\n                        {!visibility ? <Visibility color=\"primary\" /> : <VisibilityOff color=\"primary\" />}\n                      </ThemeProvider>\n                    </StyledButtonVisibility>\n                  </StyledContainerPassword>\n                  {(errors.password === 'Please enter your password' &&\n                    touched.password && (\n                      <StyledRequired>{errors.password}</StyledRequired>\n                    )) ||\n                    (errors.password &&\n                      errors.password.includes(\n                        'password must match the following'\n                      ) &&\n                      touched.password && (\n                        <StyledError>\n                          This password should contain at least eight characters\n                          and at least one number and one letter\n                        </StyledError>\n                      )) ||\n                    (errors.password && touched.password && (\n                      <StyledError>{errors.password}</StyledError>\n                    )) ||\n                    (noUser && (\n                      <StyledError>Email or password is uncorrect</StyledError>\n                    )) || (touched.password &&\n                      <StyledCorrect>This is an CORRECT password</StyledCorrect>)}\n                </StyledFormDiv>\n                <StyledButton type=\"submit\">\n                  Log In\n                  <SVG.LoginWhiteIcon />\n                </StyledButton>\n              </StyledForm>\n            );\n          }\n        }}\n      </Formik>\n    </StyledContainer>\n  );\n};\n\nexport default LoginForm;\n","import styled from 'styled-components';\n\nexport const StyledLayout = styled.div`\n  margin: 0 auto;\n  width: 100%;\n  padding: 155px 15px 156px 15px;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  background: #dcebf7;\n  @media (min-width: 768px) {\n    padding-top: 227px;\n  }\n  @media (min-width: 1440px) {\n    padding-top: 124px;\n  }\n`;","import { AuthNavigate } from 'components/authNavigate/AuthNavigate';\nimport LoginForm from 'components/registerLoginForm/LoginForm';\nimport { StyledLayout } from './LoginPage.styled';\n\nconst LoginPage = () => {\n  return (\n    <StyledLayout>\n      <LoginForm />\n      <AuthNavigate path=\"/register\" text=\"Sign Up\"/>\n    </StyledLayout>\n      \n  );\n};\n\nexport default LoginPage;"],"names":["StyledNavigate","styled","NavLink","_templateObject","_taggedTemplateLiteral","AuthNavigate","_ref","path","text","_jsx","to","children","StyledContainer","StyledHeader","_templateObject2","StyledFormDiv","_templateObject3","StyledForm","Form","_templateObject4","Styledlabel","_templateObject5","props","$validate","css","_templateObject6","_templateObject7","_templateObject8","_templateObject9","StyledField","Field","_templateObject10","_templateObject11","_templateObject12","_templateObject13","_templateObject14","StyledFieldPassword","_templateObject15","StyledContainerPassword","_templateObject16","_templateObject17","_templateObject18","_templateObject19","_templateObject20","StyledButtonVisibility","_templateObject21","StyledRequired","_templateObject22","_templateObject23","StyledCorrect","_templateObject24","StyledError","_templateObject25","StyledButton","_templateObject26","theme","createTheme","palette","primary","main","LoginSchema","Yup","shape","email","required","matches","password","min","navigate","useNavigate","dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","noUser","setNoUser","_useState3","_useState4","visibility","setVisibility","_useState5","_useState6","isLoading","setIsLoading","_jsxs","Formik","initialValues","validateOnChange","validateOnBlur","validationSchema","onSubmit","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","values","resetForm","response","wrap","_context","prev","next","login","sent","meta","requestStatus","payload","includes","t0","alert","stop","_x","_x2","apply","arguments","_ref3","errors","touched","Loader","htmlFor","name","type","placeholder","onClick","ThemeProvider","VisibilityOff","color","Visibility","SVG","StyledLayout","LoginForm"],"sourceRoot":""}