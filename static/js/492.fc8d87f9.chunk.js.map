{"version":3,"file":"static/js/492.fc8d87f9.chunk.js","mappings":"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","sources":["components/registerLoginForm/RegisterForm.jsx","pages/RegisterPage/RegisterPage.styled.jsx","pages/RegisterPage/RegisterPage.jsx"],"sourcesContent":["import React from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { useState } from 'react';\nimport {\n    StyledButton,\n    StyledContainer,\n    StyledError,\n    StyledField,\n    StyledFieldPassword,\n    StyledForm,\n    StyledFormDiv,\n    StyledHeader,\n    Styledlabel,\n    StyledRequired,\n} from './RegisterLoginForm.styled';\nimport { register } from 'redux/auth/operations';\nimport { SVG } from 'images';\n\nconst SignupSchema = Yup.object().shape({\n  name: Yup.string()\n    .min(3, 'Too Short!')\n    .max(20, 'Too Long!')\n    .required('Please enter your name'),\n  email: Yup.string()\n    .email('This is an ERROR email')\n    .required('Please enter your email')\n    .matches(/^[a-z0-9.]+@[a-z]+\\.[a-z]{2,3}$/),\n  password: Yup.string()\n    .min(8, 'Need to be more than 8 symbols!')\n    .required('Please enter your password')\n    .matches(/^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{8,30}$/),\n});\n\nconst RegisterForm = () => {\n    const navigate = useNavigate();\n    const dispatch = useDispatch();\n    const [usedEmail, setUsedEmail] = useState(false);\n\n    return  (<StyledContainer>\n        <StyledHeader>Sign Up</StyledHeader>\n        <Formik\n            initialValues={{\n                name: '',\n                email: '',\n                password: '',\n            }}\n            validateOnChange={false}\n            validateOnBlur={true}\n            validationSchema={SignupSchema}\n            onSubmit={async(values, { resetForm }) => {\n                try {\n                    const response = await dispatch(\n                        register({\n                            name: values.name,\n                            email: values.email,\n                            password: values.password,\n                        }));\n                    if (response.meta.requestStatus !== \"rejected\") {\n                        resetForm();\n                        navigate(\"/calendar\");\n                    } else {\n                        if (response.payload.includes(\"409\")) {\n                            setUsedEmail(true);\n                        }\n                    }\n                } catch (error) {\n                    alert(\"Sorry, problem at server\")\n                }\n        \n            }}\n        >\n            {({ errors, touched }) => {\n                return (\n                    <StyledForm>\n                        <StyledFormDiv>\n                            <Styledlabel\n                                htmlFor=\"name\"\n                                $validate={\n                                    (errors.name === 'Please enter your name' &&\n                                        touched.name &&\n                                        'empty') ||\n                                    (errors.name && touched.name && 'error') ||\n                                    (touched.name && 'okay')\n                                }\n                            >\n                                Name\n                            </Styledlabel>\n                            <StyledField\n                                name=\"name\"\n                                placeholder=\"Enter your name\"\n                                $validate={\n                                    (errors.name === 'Please enter your name' &&\n                                        touched.name &&\n                                        'empty') ||\n                                    (errors.name && touched.name && 'error') ||\n                                    (touched.name && 'okay')\n                                }\n                            />\n                            {(errors.name === 'Please enter your name' && touched.name && (\n                                <StyledRequired>{errors.name}</StyledRequired>\n                            )) ||\n                                (errors.name && touched.name && (\n                                    <StyledError>{errors.name}</StyledError>\n                                ))}\n                        </StyledFormDiv>\n                        <StyledFormDiv>\n                            <Styledlabel\n                                htmlFor=\"email\"\n                                $validate={\n                                    (errors.email === 'Please enter your email' &&\n                                        touched.email &&\n                                        'empty') ||\n                                    (((errors.email && (errors.email === \"This is an ERROR email\" || errors.email.includes(\"match\"))) || usedEmail) && 'error') ||\n                                    (touched.email && 'okay')\n                                }\n                            >\n                                Email\n                            </Styledlabel>\n                            <StyledField\n                                name=\"email\"\n                                type=\"email\"\n                                placeholder=\"Enter email\"\n                                $validate={\n                                    (errors.email === 'Please enter your email' &&\n                                        touched.email &&\n                                        'empty') ||\n                                    (((errors.email && (errors.email === \"This is an ERROR email\" || errors.email.includes(\"match\"))) || usedEmail) && 'error') ||\n                                    (touched.email && 'okay')\n                                }\n                            />\n                            {(errors.email === 'Please enter your email' && touched.email && (\n                                <StyledRequired>{errors.email}</StyledRequired>\n                            )) ||\n                            (errors.email && (errors.email === \"This is an ERROR email\" || errors.email.includes(\"match\"))&& (\n                                <StyledError>This is an ERROR email</StyledError>\n                            )) ||\n                            (usedEmail && (\n                                <StyledError>This user is already exist</StyledError>\n                            ))}\n                        </StyledFormDiv>\n                        <StyledFormDiv>\n                            <Styledlabel\n                                htmlFor=\"password\"\n                                $validate={\n                                    (errors.password === 'Please enter your password' &&\n                                        touched.password &&\n                                        'empty') ||\n                                    (errors.password && touched.password && 'error') ||\n                                    (touched.password && 'okay')\n                                }\n                            >\n                                Password\n                            </Styledlabel>\n                            <StyledFieldPassword\n                                name=\"password\"\n                                type=\"password\"\n                                placeholder=\"Enter password\"\n                                $validate={\n                                    (errors.password === 'Please enter your password' &&\n                                        touched.password &&\n                                        'empty') ||\n                                    (errors.password && touched.password && 'error') ||\n                                    (touched.password && 'okay')\n                                }\n                            />\n                            {(errors.password === 'Please enter your password' &&\n                                touched.password && (\n                                    <StyledRequired>{errors.password}</StyledRequired>\n                                )) ||\n                                (errors.password && errors.password.includes('password must match the following') && touched.password && (\n                                    <StyledError>This password should contain  at least eight characters and at least one number and one letter</StyledError>\n                                )) ||\n                                (errors.password && touched.password && (\n                                    <StyledError>{errors.password}</StyledError>\n                                ))\n                            }\n                        </StyledFormDiv>\n                        <StyledButton type=\"submit\">Sign Up\n                            <SVG.LoginWhiteIcon />\n                        </StyledButton>\n                    </StyledForm>\n                );\n            }}\n        </Formik>\n    </StyledContainer>)\n};\n\nexport default RegisterForm;","import styled from 'styled-components';\n\nexport const StyledLayout = styled.div`\n  margin: 0 auto;\n  width: 100%;\n  padding: 155px 15px 156px 15px;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  background: #dcebf7;\n  @media (min-width: 768px) {\n    padding-top: 227px;\n  }\n  @media (min-width: 1440px) {\n    padding-top: 124px;\n  }\n`;\n","\nimport { AuthNavigate } from 'components/authNavigate/AuthNavigate';\nimport RegisterForm from 'components/registerLoginForm/RegisterForm';\nimport { StyledLayout } from './RegisterPage.styled';\n\n\nconst RegisterPage = () => {\n  return (\n    <StyledLayout>\n      <RegisterForm />\n      <AuthNavigate path=\"/login\" text=\"Log In\"/>\n    </StyledLayout>\n  );\n};\n\nexport default RegisterPage;\n"],"names":["SignupSchema","Yup","shape","name","min","max","required","email","matches","password","navigate","useNavigate","dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","usedEmail","setUsedEmail","_jsxs","StyledContainer","children","_jsx","StyledHeader","Formik","initialValues","validateOnChange","validateOnBlur","validationSchema","onSubmit","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","values","_ref","resetForm","response","wrap","_context","prev","next","register","sent","meta","requestStatus","payload","includes","t0","alert","stop","_x","_x2","apply","arguments","_ref3","errors","touched","StyledForm","StyledFormDiv","Styledlabel","htmlFor","$validate","StyledField","placeholder","StyledRequired","StyledError","type","StyledFieldPassword","StyledButton","SVG","StyledLayout","styled","_templateObject","_taggedTemplateLiteral","RegisterForm","AuthNavigate","path","text"],"sourceRoot":""}